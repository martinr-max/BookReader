{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/book_app/src/Admin/AdminTable/AdminTable.js\";\nimport React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button, TableFooter, TablePagination } from '@material-ui/core';\nimport MyTablePaginationActions from '../Pagination/MyTablePaginationActions';\nexport default function AdminTable({\n  handleclickOpen,\n  loadedBooks,\n  handleChangePage,\n  handleChangeRowsPerPage,\n  page,\n  rowsPerPage\n}) {\n  const columns = [{\n    id: 'name',\n    label: 'Name',\n    minWidth: 170\n  }, {\n    id: 'code',\n    label: 'ISO\\u00a0Code',\n    minWidth: 100\n  }, {\n    id: 'title',\n    label: 'title',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toLocaleString('en-US')\n  }, {\n    id: 'author',\n    label: 'Author',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toLocaleString('en-US')\n  }, {\n    id: 'imageUrl',\n    label: 'imageUrl',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toFixed(2)\n  }, {\n    id: 'description',\n    label: 'Description',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toFixed(2)\n  }, {\n    id: 'year',\n    label: 'Year',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toFixed(2)\n  }, {\n    id: 'pages',\n    label: 'Pages',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toFixed(2)\n  }];\n\n  function createData(bookId, title, author, imageUrl, description, year, pages) {\n    return {\n      bookId,\n      title,\n      author,\n      imageUrl,\n      description,\n      year,\n      pages\n    };\n  }\n\n  const rows = loadedBooks.map(book => {\n    return createData(book.bookId, book.title, book.author, book.imageUrl, book.description, book.year, book.pages);\n  });\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, loadedBooks.length - page * rowsPerPage);\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Books\"), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, column.label)))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, loadedBooks && (rowsPerPage > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : rows).map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    name: \"title\",\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, row.title), /*#__PURE__*/React.createElement(TableCell, {\n    name: \"author\",\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 59\n    }\n  }, \" \", row.author, \" \")), /*#__PURE__*/React.createElement(TableCell, {\n    name: \"imageUrl\",\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, row.imageUrl), /*#__PURE__*/React.createElement(TableCell, {\n    name: \"description\",\n    align: \"right\",\n    className: \"text2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }\n  }, row.description), /*#__PURE__*/React.createElement(TableCell, {\n    name: \"year\",\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }, row.year), /*#__PURE__*/React.createElement(TableCell, {\n    name: \"pages\",\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, row.pages), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    href: \"/admin/edit/\" + row.bookId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, \"EDIT\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: e => handleclickOpen(row.bookId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, \"DELETE\"))))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [3, 6, 25],\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'rows per page'\n      },\n      native: true\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    ActionsComponent: MyTablePaginationActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/martinraba/Desktop/book_app/src/Admin/AdminTable/AdminTable.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","TableFooter","TablePagination","MyTablePaginationActions","AdminTable","handleclickOpen","loadedBooks","handleChangePage","handleChangeRowsPerPage","page","rowsPerPage","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","createData","bookId","title","author","imageUrl","description","year","pages","rows","map","book","emptyRows","Math","min","length","column","slice","row","e","inputProps","native"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button, TableFooter, TablePagination } from '@material-ui/core';\nimport MyTablePaginationActions from '../Pagination/MyTablePaginationActions';\n\n\nexport default function AdminTable({\n    handleclickOpen,\n    loadedBooks,\n    handleChangePage,\n    handleChangeRowsPerPage,\n    page, \n    rowsPerPage\n  }) {\n\n    const columns = [\n      { id: 'name', label: 'Name', minWidth: 170 },\n      { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\n      {\n        id: 'title',\n        label: 'title',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toLocaleString('en-US'),\n      },\n      {\n        id: 'author',\n        label: 'Author',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toLocaleString('en-US'),\n      },\n      {\n        id: 'imageUrl',\n        label: 'imageUrl',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toFixed(2),\n      },\n      {\n        id: 'description',\n        label: 'Description',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toFixed(2),\n      },\n      {\n        id: 'year',\n        label: 'Year',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toFixed(2),\n      },\n      {\n        id: 'pages',\n        label: 'Pages',\n        minWidth: 170,\n        align: 'right',\n        format: (value) => value.toFixed(2),\n      },\n    ];\n\nfunction createData(bookId, title, author, imageUrl, description, year, pages) {\n    return {bookId, title, author, imageUrl, description, year, pages  };\n}\n\n\nconst rows =  loadedBooks.map(book => {\n  return createData(\n      book.bookId,\n      book.title,\n      book.author,\n      book.imageUrl,\n      book.description,\n      book.year,\n      book.pages)\n})\n      \nconst emptyRows = rowsPerPage - Math.min(rowsPerPage, loadedBooks.length - page * rowsPerPage);\n\n  \n\n    return(\n        <TableContainer component={Paper}>\n            <h2>Books</h2>\n          <Table>\n            <TableHead>\n              <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              { loadedBooks &&\n              (rowsPerPage > 0\n                ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                : rows\n              ).map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell  name=\"title\" component=\"th\" scope=\"row\">{row.title}</TableCell>\n                  <TableCell  name=\"author\" align=\"right\"><div> {row.author} </div></TableCell>\n                  <TableCell  name=\"imageUrl\" align=\"right\">{row.imageUrl}</TableCell>\n                  <TableCell  name=\"description\" align=\"right\" className=\"text2\">{row.description}</TableCell>\n                  <TableCell  name=\"year\" align=\"right\">{row.year}</TableCell>\n                  <TableCell  name=\"pages\" align=\"right\">{row.pages}</TableCell>\n                  <TableCell align=\"right\">\n                    <Button href={\"/admin/edit/\" + row.bookId} >EDIT</Button>\n                    <Button color=\"secondary\"  onClick={(e) => handleclickOpen(row.bookId)} >DELETE</Button>\n                  </TableCell>\n                </TableRow>\n              )) }\n            </TableBody>\n            <TableFooter>\n                <TablePagination\n                rowsPerPageOptions={[3, 6, 25]}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={MyTablePaginationActions}\n                 />\n            </TableFooter>\n          </Table>\n        </TableContainer>\n    )\n}"]},"metadata":{},"sourceType":"module"}