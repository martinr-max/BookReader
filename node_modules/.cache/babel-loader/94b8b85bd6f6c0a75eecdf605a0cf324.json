{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/book_app/src/Admin/adminPage/AdminPanel.js\";\nimport React, { useEffect, useState } from 'react';\nimport './AdminPanel.css';\nimport axios from 'axios';\nimport AdminTable from '../AdminTable/AdminTable';\nimport DeleteBookDialog from '../deleteBook/DeleteBookModal';\nimport CircularIndeterminate from '../../shared/progressCircle/ProgressCircle';\nimport Alert from '@material-ui/lab/Alert';\nexport default function AdminPanel() {\n  const [loadedBooks, setLoadedBooks] = useState([]);\n  const [bookIndex, setBookIndex] = useState();\n  const [open, setOpen] = useState(false);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(3);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleclickOpen = index => {\n    let bookId = index;\n    setBookIndex(bookId);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchBooks = async () => {\n      try {\n        const responseData = await axios.get('http://localhost:8000/api/bookBlog/books/');\n        const books = responseData.data;\n        const bookArray = [];\n\n        for (const key in books) {\n          bookArray.push({\n            id: key,\n            bookId: books[key].id,\n            title: books[key].title,\n            author: books[key].author,\n            imageUrl: books[key].imageUrl,\n            description: books[key].description,\n            year: books[key].year,\n            pages: books[key].pages\n          });\n        }\n\n        setLoadedBooks(bookArray);\n        setIsLoading(false);\n      } catch (err) {\n        setError(err.response.data.message);\n      }\n    };\n\n    fetchBooks();\n  }, []);\n\n  const handleDeleteBook = async () => {\n    setOpen(false);\n\n    try {\n      await axios.delete(\"http://localhost:8000/api/admin/books/delete/\" + bookIndex);\n      setLoadedBooks(prevBooks => prevBooks.filter(book => book.bookId !== bookIndex));\n    } catch (err) {\n      setError(err.response.data.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, error && /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 23\n    }\n  }, \" \", error, \" \"), !error && isLoading && /*#__PURE__*/React.createElement(CircularIndeterminate, {\n    size: \"7rem\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 40\n    }\n  }), loadedBooks && /*#__PURE__*/React.createElement(AdminTable, {\n    loadedBooks: loadedBooks,\n    handleclickOpen: handleclickOpen,\n    handleChangePage: handleChangePage,\n    handleChangeRowsPerPage: handleChangeRowsPerPage,\n    page: page,\n    rowsPerPage: rowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(DeleteBookDialog, {\n    open: open,\n    handleDeleteBook: handleDeleteBook,\n    handleClose: handleClose,\n    bookid: bookIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/martinraba/Desktop/book_app/src/Admin/adminPage/AdminPanel.js"],"names":["React","useEffect","useState","axios","AdminTable","DeleteBookDialog","CircularIndeterminate","Alert","AdminPanel","loadedBooks","setLoadedBooks","bookIndex","setBookIndex","open","setOpen","page","setPage","rowsPerPage","setRowsPerPage","isLoading","setIsLoading","error","setError","handleclickOpen","index","bookId","handleClose","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","fetchBooks","responseData","get","books","data","bookArray","key","push","id","title","author","imageUrl","description","year","pages","err","response","message","handleDeleteBook","delete","prevBooks","filter","book"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './AdminPanel.css'\nimport axios from 'axios';\nimport AdminTable from '../AdminTable/AdminTable';\nimport DeleteBookDialog from '../deleteBook/DeleteBookModal';\nimport CircularIndeterminate from '../../shared/progressCircle/ProgressCircle';\nimport Alert from '@material-ui/lab/Alert';\n\n\nexport default function AdminPanel() {\n\n    const [loadedBooks, setLoadedBooks] = useState([]);\n    const [bookIndex, setBookIndex] = useState();\n    const [open, setOpen] = useState(false);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(3);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(\"\");\n\n    const handleclickOpen = (index) => {\n     let bookId = index;\n      setBookIndex(bookId);\n      setOpen(true);\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n    }\n\n    const handleChangePage = (event, newPage) => {\n      setPage(newPage);\n    };\n  \n    const handleChangeRowsPerPage = (event) => {\n      setRowsPerPage(parseInt(event.target.value, 10));\n      setPage(0);\n    };\n    \n    useEffect( () => {\n      setIsLoading(true); \n      const fetchBooks = async () => {\n        try {\n          const responseData = await axios.get('http://localhost:8000/api/bookBlog/books/');\n          const books = responseData.data;\n          const bookArray = []\n          for(const key in books) {\n            bookArray.push({\n              id: key,\n              bookId: books[key].id,\n              title: books[key].title,\n              author: books[key].author,\n              imageUrl: books[key].imageUrl,\n              description: books[key].description,\n              year: books[key].year,\n              pages: books[key].pages\n            })\n          } \n          setLoadedBooks(bookArray);\n          setIsLoading(false);   \n\n        }\n        catch(err) {\n          setError(err.response.data.message)\n        }\n      }\n\n      fetchBooks();\n       \n    }, []);\n\n    const handleDeleteBook = async () => {\n        setOpen(false);\n        try {\n          await axios.delete(\"http://localhost:8000/api/admin/books/delete/\" + bookIndex);\n          setLoadedBooks(prevBooks => prevBooks.filter(book => book.bookId !== bookIndex));\n\n        }\n        catch(err) {\n          setError(err.response.data.message)\n        }\n      \n      }\n\n\n    return (\n        <React.Fragment>\n          { error &&  <Alert severity=\"error\"> { error } </Alert> }\n              {!error &&  isLoading && <CircularIndeterminate size=\"7rem\" color=\"primary\" />}\n              {loadedBooks && \n            <AdminTable\n             loadedBooks={loadedBooks}\n             handleclickOpen={handleclickOpen}\n             handleChangePage={handleChangePage}\n             handleChangeRowsPerPage={handleChangeRowsPerPage}\n             page={page}\n             rowsPerPage={rowsPerPage}\n              /> }\n              <DeleteBookDialog \n              open={open}\n              handleDeleteBook={handleDeleteBook}\n              handleClose={handleClose}\n              bookid={bookIndex} />\n        </React.Fragment>\n      );\n    \n}\n\n"]},"metadata":{},"sourceType":"module"}