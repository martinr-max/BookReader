{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/book_app/src/Admin/adminPage/AdminPanel.js\";\nimport React, { useEffect, useState } from 'react';\nimport { MDBCard, MDBCardHeader, MDBCardBody, MDBTableEditable } from \"mdbreact\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios';\nexport default function AdminPanel() {\n  const [loadedBooks, setLoadedBooks] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/bookBlog/books/').then(response => {\n      const books = response.data.books;\n      const bookArray = [];\n\n      for (const key in books) {\n        bookArray.push({\n          id: key,\n          title: books[key].title,\n          author: books[key].author,\n          imageUrl: books[key].imageUrl,\n          description: books[key].description,\n          year: books[key].year,\n          pages: books[key].pages\n        });\n      }\n\n      setLoadedBooks(bookArray);\n    }).catch(err => console.log(err));\n  }, []);\n  const columns = [\"title\", \"Author\", \"imageUrl\", \"description\", \"year\", \"pages\"];\n  const data = loadedBooks.map(book => {\n    return [book.title, book.author, book.imageUrl, book.description, book.year, book.pages];\n  });\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MDBCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MDBCardHeader, {\n    tag: \"h3\",\n    className: \"text-center font-weight-bold text-uppercase py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"books\"), /*#__PURE__*/React.createElement(MDBCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MDBTableEditable, {\n    data: data,\n    columns: columns,\n    striped: true,\n    bordered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/martinraba/Desktop/book_app/src/Admin/adminPage/AdminPanel.js"],"names":["React","useEffect","useState","MDBCard","MDBCardHeader","MDBCardBody","MDBTableEditable","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","axios","AdminPanel","loadedBooks","setLoadedBooks","get","then","response","books","data","bookArray","key","push","id","title","author","imageUrl","description","year","pages","catch","err","console","log","columns","map","book"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,aAAlB,EAAiCC,WAAjC,EAA8CC,gBAA9C,QAAsE,UAAtE;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,UAAT,GAAsB;AAGjC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;AAGAD,EAAAA,SAAS,CAAE,MAAM;AAEba,IAAAA,KAAK,CAACI,GAAN,CAAU,2CAAV,EACCC,IADD,CACOC,QAAQ,IAAI;AACf,YAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAT,CAAcD,KAA5B;AACA,YAAME,SAAS,GAAG,EAAlB;;AACA,WAAI,MAAMC,GAAV,IAAiBH,KAAjB,EAAwB;AACtBE,QAAAA,SAAS,CAACE,IAAV,CAAe;AACbC,UAAAA,EAAE,EAAEF,GADS;AAEbG,UAAAA,KAAK,EAAEN,KAAK,CAACG,GAAD,CAAL,CAAWG,KAFL;AAGbC,UAAAA,MAAM,EAAEP,KAAK,CAACG,GAAD,CAAL,CAAWI,MAHN;AAIbC,UAAAA,QAAQ,EAAER,KAAK,CAACG,GAAD,CAAL,CAAWK,QAJR;AAKbC,UAAAA,WAAW,EAAET,KAAK,CAACG,GAAD,CAAL,CAAWM,WALX;AAMbC,UAAAA,IAAI,EAAEV,KAAK,CAACG,GAAD,CAAL,CAAWO,IANJ;AAObC,UAAAA,KAAK,EAAEX,KAAK,CAACG,GAAD,CAAL,CAAWQ;AAPL,SAAf;AAUD;;AACDf,MAAAA,cAAc,CAACM,SAAD,CAAd;AAEH,KAlBD,EAmBCU,KAnBD,CAmBOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAnBd;AAoBN,GAtBW,EAsBT,EAtBS,CAAT;AAwBH,QAAMG,OAAO,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,UAApB,EAAgC,aAAhC,EAA+C,MAA/C,EAAuD,OAAvD,CAAhB;AACA,QAAMf,IAAI,GAAGN,WAAW,CAACsB,GAAZ,CAAgBC,IAAI,IAAI;AACjC,WAAO,CAACA,IAAI,CAACZ,KAAN,EAAaY,IAAI,CAACX,MAAlB,EAA0BW,IAAI,CAACV,QAA/B,EAAyCU,IAAI,CAACT,WAA9C,EAA2DS,IAAI,CAACR,IAAhE,EAAsEQ,IAAI,CAACP,KAA3E,CAAP;AACH,GAFY,CAAb;AAIG,sBAEI,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEnB,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAC,IAAnB;AAAwB,IAAA,SAAS,EAAC,kDAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAES,IAAxB;AAA8B,IAAA,OAAO,EAAEe,OAAvC;AAAgD,IAAA,OAAO,MAAvD;AAAwD,IAAA,QAAQ,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAJF,CADF,CAFJ;AAeH","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MDBCard, MDBCardHeader, MDBCardBody, MDBTableEditable } from \"mdbreact\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios';\n\nexport default function AdminPanel() {\n\n\n    const [loadedBooks, setLoadedBooks] = useState([])\n\n\n    useEffect( () => {\n        \n        axios.get('http://localhost:8000/api/bookBlog/books/')\n        .then( response => {\n            const books = response.data.books;\n            const bookArray = []\n            for(const key in books) {\n              bookArray.push({\n                id: key,\n                title: books[key].title,\n                author: books[key].author,\n                imageUrl: books[key].imageUrl,\n                description: books[key].description,\n                year: books[key].year,\n                pages: books[key].pages\n              })\n              \n            } \n            setLoadedBooks(bookArray)   \n     \n        })\n        .catch(err => console.log(err))       \n }, []);\n\n const columns = [\"title\", \"Author\", \"imageUrl\", \"description\", \"year\", \"pages\"];\n const data = loadedBooks.map(book => {\n     return [book.title, book.author, book.imageUrl, book.description, book.year, book.pages];\n })\n\n    return (\n        \n        <TableContainer component={Paper}>\n          <MDBCard>\n            <MDBCardHeader tag=\"h3\" className=\"text-center font-weight-bold text-uppercase py-4\">\n              books\n            </MDBCardHeader>\n            <MDBCardBody>\n            <MDBTableEditable data={data} columns={columns} striped bordered />\n            </MDBCardBody>\n          </MDBCard>\n        </TableContainer>\n      );\n    \n\n}\n\n"]},"metadata":{},"sourceType":"module"}