{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/book_app/src/Admin/adminPage/AdminPanel.js\";\nimport React, { useEffect, useState } from 'react';\nimport './AdminPanel.css';\nimport EditBook from '../editBook.js/EditBook';\nimport axios from 'axios';\nimport { useParams, useHistory } from 'react-router-dom';\nimport AdminTable from '../AdminTable/AdminTable';\nexport default function AdminPanel() {\n  const [loadedBooks, setLoadedBooks] = useState([]);\n  const [values, setValues] = useState();\n  const history = useHistory();\n  const bookId = useParams().bookId;\n  /*\n  const handleSubmit = (event) => {\n      event.preventDefault();\n      const newbook = {\n        title: values.title,\n        author: values.author,\n        imageUrl: values.imageUrl,\n        year: values.year,\n        pages: values.pages,\n        description: values.description\n      } \n      setValues(newbook);\n       axios.patch (`http://localhost:8000/api/admin/books/edit/` + bookId, newbook)\n      .then(res => {\n        console.log(res.data);\n        history.push('/admin/edit/' + bookId);\n        \n      })\n      .catch(err => console.log(err))\n  }; \n  */\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/bookBlog/books/').then(response => {\n      const books = response.data.books;\n      const bookArray = [];\n\n      for (const key in books) {\n        bookArray.push({\n          id: key,\n          bookId: books[key].id,\n          title: books[key].title,\n          author: books[key].author,\n          imageUrl: books[key].imageUrl,\n          description: books[key].description,\n          year: books[key].year,\n          pages: books[key].pages\n        });\n      }\n\n      setLoadedBooks(bookArray);\n    }).catch(err => console.log(err));\n  }, []);\n  /*const handleChange = (event) => {\n     event.persist();\n     setValues(values => ({\n       ...values,\n       [event.target.name]: event.target.value\n   }));\n  }*/\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AdminTable, {\n    loadedBooks: loadedBooks,\n    handleChange: handleChange,\n    handleSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/martinraba/Desktop/book_app/src/Admin/adminPage/AdminPanel.js"],"names":["React","useEffect","useState","EditBook","axios","useParams","useHistory","AdminTable","AdminPanel","loadedBooks","setLoadedBooks","values","setValues","history","bookId","get","then","response","books","data","bookArray","key","push","id","title","author","imageUrl","description","year","pages","catch","err","console","log","handleChange","handleSubmit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,kBAAP;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,UAAnB,QAAoC,kBAApC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,eAAe,SAASC,UAAT,GAAsB;AAGjC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,EAApC;AACA,QAAMW,OAAO,GAAGP,UAAU,EAA1B;AAEA,QAAMQ,MAAM,GAAGT,SAAS,GAAGS,MAA3B;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIIb,EAAAA,SAAS,CAAE,MAAM;AAEbG,IAAAA,KAAK,CAACW,GAAN,CAAU,2CAAV,EACCC,IADD,CACOC,QAAQ,IAAI;AACf,YAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAT,CAAcD,KAA5B;AACA,YAAME,SAAS,GAAG,EAAlB;;AACA,WAAI,MAAMC,GAAV,IAAiBH,KAAjB,EAAwB;AACtBE,QAAAA,SAAS,CAACE,IAAV,CAAe;AACbC,UAAAA,EAAE,EAAEF,GADS;AAEbP,UAAAA,MAAM,EAAEI,KAAK,CAACG,GAAD,CAAL,CAAWE,EAFN;AAGbC,UAAAA,KAAK,EAAEN,KAAK,CAACG,GAAD,CAAL,CAAWG,KAHL;AAIbC,UAAAA,MAAM,EAAEP,KAAK,CAACG,GAAD,CAAL,CAAWI,MAJN;AAKbC,UAAAA,QAAQ,EAAER,KAAK,CAACG,GAAD,CAAL,CAAWK,QALR;AAMbC,UAAAA,WAAW,EAAET,KAAK,CAACG,GAAD,CAAL,CAAWM,WANX;AAObC,UAAAA,IAAI,EAAEV,KAAK,CAACG,GAAD,CAAL,CAAWO,IAPJ;AAQbC,UAAAA,KAAK,EAAEX,KAAK,CAACG,GAAD,CAAL,CAAWQ;AARL,SAAf;AAWD;;AACDnB,MAAAA,cAAc,CAACU,SAAD,CAAd;AAEH,KAnBD,EAoBCU,KApBD,CAoBOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CApBd;AAqBN,GAvBW,EAuBT,EAvBS,CAAT;AAyBH;AACD;AACA;AACA;AACA;AACA;AACA;;AAEI,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,WAAW,EAAEtB,WAAzB;AAAsC,IAAA,YAAY,EAAEyB,YAApD;AAAkE,IAAA,YAAY,EAAEC,YAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAOH","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './AdminPanel.css'\nimport EditBook from '../editBook.js/EditBook';\nimport axios from 'axios';\nimport {useParams, useHistory} from 'react-router-dom'\nimport AdminTable from '../AdminTable/AdminTable';\n\nexport default function AdminPanel() {\n\n\n    const [loadedBooks, setLoadedBooks] = useState([])\n    const [values, setValues] = useState();\n    const history = useHistory();\n\n    const bookId = useParams().bookId;\n    \n    /*\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const newbook = {\n          title: values.title,\n          author: values.author,\n          imageUrl: values.imageUrl,\n          year: values.year,\n          pages: values.pages,\n          description: values.description\n        } \n        setValues(newbook);\n\n        axios.patch (`http://localhost:8000/api/admin/books/edit/` + bookId, newbook)\n        .then(res => {\n          console.log(res.data);\n          history.push('/admin/edit/' + bookId);\n          \n        })\n        .catch(err => console.log(err))\n    }; \n\n */\n\n    useEffect( () => {\n        \n        axios.get('http://localhost:8000/api/bookBlog/books/')\n        .then( response => {\n            const books = response.data.books;\n            const bookArray = []\n            for(const key in books) {\n              bookArray.push({\n                id: key,\n                bookId: books[key].id,\n                title: books[key].title,\n                author: books[key].author,\n                imageUrl: books[key].imageUrl,\n                description: books[key].description,\n                year: books[key].year,\n                pages: books[key].pages\n              })\n              \n            } \n            setLoadedBooks(bookArray)   \n     \n        })\n        .catch(err => console.log(err))       \n }, []);\n\n /*const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({\n      ...values,\n      [event.target.name]: event.target.value\n  }));\n }*/\n\n    return (\n        <React.Fragment>\n            <AdminTable loadedBooks={loadedBooks} handleChange={handleChange} handleSubmit={handleSubmit} />\n        </React.Fragment>\n      );\n    \n\n}\n\n"]},"metadata":{},"sourceType":"module"}