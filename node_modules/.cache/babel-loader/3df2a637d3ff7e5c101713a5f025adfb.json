{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/book_app/src/navigation/searchEngine/SearchEngine.js\";\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport axios from 'axios';\nimport SearchResultsPage from '../searchResultsPage/SearchResultsPage';\nconst Search = React.memo(props => {\n  const [text, setText] = React.useState('');\n  const [search, setSearch] = React.useState('');\n  const [loadedBooks, setLoadedBooks] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/bookBlog/books/').then(response => {\n      const books = response.data.books;\n      setLoadedBooks(books);\n    }).catch(err => console.log(err));\n  }, []);\n  console.log(loadedBooks);\n\n  const handleText = event => {\n    setText(event.target.value);\n  };\n\n  const handleSearch = () => {\n    setSearch(text);\n    console.log(text);\n  };\n\n  const filteredBooks = React.useMemo(() => {\n    console.log(loadedBooks);\n    loadedBooks.filter(book => {\n      return book.title.toLowerCase().includes(search.text);\n    });\n  }, []);\n  console.log(filteredBooks);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    onChange: handleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Search\")));\n});\nexport default Search;","map":{"version":3,"sources":["/Users/martinraba/Desktop/book_app/src/navigation/searchEngine/SearchEngine.js"],"names":["React","useState","useEffect","useRef","useMemo","axios","SearchResultsPage","Search","memo","props","text","setText","search","setSearch","loadedBooks","setLoadedBooks","get","then","response","books","data","catch","err","console","log","handleText","event","target","value","handleSearch","filteredBooks","filter","book","title","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,OAA7C,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AAEA,MAAMC,MAAM,GAAGP,KAAK,CAACQ,IAAN,CAAWC,KAAK,IAAI;AAE/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,KAAK,CAACC,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBb,KAAK,CAACC,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AAGAC,EAAAA,SAAS,CAAE,MAAM;AAEVG,IAAAA,KAAK,CAACW,GAAN,CAAU,2CAAV,EACCC,IADD,CACOC,QAAQ,IAAI;AACf,YAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAT,CAAcD,KAA5B;AACAJ,MAAAA,cAAc,CAACI,KAAD,CAAd;AACH,KAJD,EAKCE,KALD,CAKOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALd;AAMN,GARQ,EAQN,EARM,CAAT;AAUAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,WAAZ;;AACA,QAAMW,UAAU,GAAIC,KAAD,IAAW;AAC1Bf,IAAAA,OAAO,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAFH;;AAIE,QAAMC,YAAY,GAAG,MAAM;AACzBhB,IAAAA,SAAS,CAACH,IAAD,CAAT;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACD,GAHD;;AAKA,QAAMoB,aAAa,GAAG9B,KAAK,CAACI,OAAN,CAAc,MAAK;AACrCmB,IAAAA,OAAO,CAACC,GAAR,CAAYV,WAAZ;AACFA,IAAAA,WAAW,CAACiB,MAAZ,CAAoBC,IAAD,IAAU;AACzB,aAAOA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCvB,MAAM,CAACF,IAAzC,CAAP;AAEL,KAHC;AAKD,GAPqB,EAOnB,EAPmB,CAAtB;AASAa,EAAAA,OAAO,CAACC,GAAR,CAAYM,aAAZ;AAGJ,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACR;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEpB,IAA1B;AAAgC,IAAA,QAAQ,EAAEe,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,eAER;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEI,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFQ,CADR,CADJ;AAcD,CArDc,CAAf;AAwDA,eAAetB,MAAf","sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport axios from 'axios';\nimport SearchResultsPage from '../searchResultsPage/SearchResultsPage';\n\nconst Search = React.memo(props => {\n\n    const [text, setText] = React.useState('');\n    const [search, setSearch] = React.useState('');\n    const [loadedBooks, setLoadedBooks] = useState([]);\n\n\n    useEffect( () => {\n        \n           axios.get('http://localhost:8000/api/bookBlog/books/')\n           .then( response => {\n               const books = response.data.books;\n               setLoadedBooks(books)\n           })\n           .catch(err => console.log(err))       \n    }, []);\n\n    console.log(loadedBooks)\n    const handleText = (event) => {\n        setText(event.target.value);\n      };\n     \n      const handleSearch = () => {\n        setSearch(text);\n        console.log(text)\n      };\n    \n      const filteredBooks = React.useMemo(() =>{\n          console.log(loadedBooks)\n        loadedBooks.filter((book) => {\n            return book.title.toLowerCase().includes(search.text)\n\n      })\n\n      }, []);\n\n      console.log(filteredBooks)\n\n  \n  return (\n      <React.Fragment>\n              <div>\n      <input type=\"text\" value={text} onChange={handleText} />\n      <button type=\"button\" onClick={handleSearch}>\n        Search\n      </button>\n \n    </div>\n    \n                \n                </React.Fragment>\n\n  );\n});\n\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}