{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/book_app/src/context/AuthContext.js\";\nimport React, { createContext, useCallback, useEffect, useState } from 'react';\nexport const AuthContext = createContext({});\nexport const AuthProvider = ({\n  children\n}) => {\n  const [userId, setUserId] = useState(false);\n  const [role, setRole] = useState('');\n  const [userBookList, setUserBookList] = useState([]);\n  const login = useCallback((uid, urole, uBookList) => {\n    setUserId(uid);\n    setRole(urole);\n    setUserBookList(uBookList);\n    localStorage.setItem('userData', JSON.stringify({\n      userId: uid,\n      role: urole,\n      userBookList: uBookList\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setUserId(null);\n    setUserBookList(null);\n    localStorage.removeItem('userData');\n  }, []);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n\n    if (storedData) {\n      login(storedData.userId, storedData.role, storedData.userBookList);\n    }\n  }, [login]);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      userId,\n      role: role,\n      userBookList,\n      isLoggedIn: userId !== null,\n      login,\n      logout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, \" \", children);\n};","map":{"version":3,"sources":["/Users/martinraba/Desktop/book_app/src/context/AuthContext.js"],"names":["React","createContext","useCallback","useEffect","useState","AuthContext","AuthProvider","children","userId","setUserId","role","setRole","userBookList","setUserBookList","login","uid","urole","uBookList","localStorage","setItem","JSON","stringify","logout","removeItem","storedData","parse","getItem","isLoggedIn"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,WAA9B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAqE,OAArE;AAGA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,CAAC,EAAD,CAAjC;AAEP,OAAO,MAAMK,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAE1C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAMU,KAAK,GAAGZ,WAAW,CAAE,CAACa,GAAD,EAAOC,KAAP,EAAcC,SAAd,KAA4B;AACrDR,IAAAA,SAAS,CAACM,GAAD,CAAT;AACAJ,IAAAA,OAAO,CAACK,KAAD,CAAP;AACAH,IAAAA,eAAe,CAACI,SAAD,CAAf;AACAC,IAAAA,YAAY,CAACC,OAAb,CACE,UADF,EAEEC,IAAI,CAACC,SAAL,CAAe;AACZb,MAAAA,MAAM,EAAEO,GADI;AAGZL,MAAAA,IAAI,EAAEM,KAHM;AAIZJ,MAAAA,YAAY,EAAEK;AAJF,KAAf,CAFF;AASD,GAbwB,EAatB,EAbsB,CAAzB;AAgBA,QAAMK,MAAM,GAAGpB,WAAW,CAAC,MAAM;AAC/BO,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAI,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAK,IAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB;AACD,GAJyB,EAIvB,EAJuB,CAA1B;AAQApB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,UAAU,GAAGJ,IAAI,CAACK,KAAL,CAAWP,YAAY,CAACQ,OAAb,CAAqB,UAArB,CAAX,CAAnB;;AACA,QAAGF,UAAH,EAAe;AACbV,MAAAA,KAAK,CAACU,UAAU,CAAChB,MAAZ,EAAoBgB,UAAU,CAACd,IAA/B,EAAqCc,UAAU,CAACZ,YAAhD,CAAL;AACD;AAEF,GANQ,EAMP,CAACE,KAAD,CANO,CAAT;AAOA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAE3BN,MAAAA,MAF2B;AAG3BE,MAAAA,IAAI,EAAEA,IAHqB;AAI3BE,MAAAA,YAJ2B;AAK3Be,MAAAA,UAAU,EAAEnB,MAAM,KAAK,IALI;AAM3BM,MAAAA,KAN2B;AAO3BQ,MAAAA;AAP2B,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UASKf,QATL,CADF;AAeD,CApDM","sourcesContent":["import React, {createContext, useCallback, useEffect, useState} from 'react';\n\n\nexport const AuthContext = createContext({});\n\nexport const AuthProvider = ({children}) => {\n  \n  const [userId, setUserId] = useState(false);\n  const [role, setRole] = useState('');\n  const [userBookList, setUserBookList] = useState([]);\n\n  const login = useCallback( (uid,  urole, uBookList) => {\n    setUserId(uid);\n    setRole(urole);\n    setUserBookList(uBookList)\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n         userId: uid,\n       \n         role: urole,\n         userBookList: uBookList\n      })\n    )\n  }, []);\n\n  \n  const logout = useCallback(() => {\n    setUserId(null);\n    setUserBookList(null);\n    localStorage.removeItem('userData');\n  }, []); \n\n\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if(storedData) {\n      login(storedData.userId, storedData.role, storedData.userBookList);\n    }\n\n  },[login]);\n  return(\n    <AuthContext.Provider value={{\n      \n      userId,\n      role: role,\n      userBookList,\n      isLoggedIn: userId !== null,\n      login,\n      logout\n      \n    }}> {children}\n    </AuthContext.Provider>\n  )\n\n\n}"]},"metadata":{},"sourceType":"module"}