{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/book_app/src/context/AuthContext.js\";\nimport React, { createContext, useCallback, useEffect, useState } from 'react';\nexport const AuthContext = createContext({});\nexport const AuthProvider = ({\n  children\n}) => {\n  const [userId, setUserId] = useState(null);\n  const [token, setToken] = useState(null);\n  const [role, setRole] = useState('');\n  const [userBookList, setUserBookList] = useState([]);\n  const login = useCallback((uid, utoken, urole, uBookList) => {\n    setUserId(uid);\n    setUserId(utoken);\n    setRole(urole);\n    setUserBookList(uBookList);\n    localStorage.setItem('userData', JSON.stringify({\n      userId: uid,\n      token: utoken,\n      role: urole,\n      userBookList: uBookList\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setUserId(null);\n    setToken(null);\n    setUserBookList(null);\n    localStorage.removeItem('userData');\n  }, []);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n\n    if (storedData) {\n      login(storedData.userId, storedData.token, storedData.role, storedData.userBookList);\n    }\n  }, [login]);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token: token,\n      userId: userId,\n      role: role,\n      userBookList,\n      isLoggedIn: userId !== null,\n      login,\n      logout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, \" \", children);\n};","map":{"version":3,"sources":["/Users/martinraba/Desktop/book_app/src/context/AuthContext.js"],"names":["React","createContext","useCallback","useEffect","useState","AuthContext","AuthProvider","children","userId","setUserId","token","setToken","role","setRole","userBookList","setUserBookList","login","uid","utoken","urole","uBookList","localStorage","setItem","JSON","stringify","logout","removeItem","storedData","parse","getItem","isLoggedIn"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,WAA9B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAqE,OAArE;AAGA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,CAAC,EAAD,CAAjC;AAEP,OAAO,MAAMK,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC1C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AAIA,QAAMY,KAAK,GAAGd,WAAW,CAAE,CAACe,GAAD,EAAMC,MAAN,EAAcC,KAAd,EAAqBC,SAArB,KAAmC;AAC5DX,IAAAA,SAAS,CAACQ,GAAD,CAAT;AACAR,IAAAA,SAAS,CAACS,MAAD,CAAT;AACAL,IAAAA,OAAO,CAACM,KAAD,CAAP;AACAJ,IAAAA,eAAe,CAACK,SAAD,CAAf;AACAC,IAAAA,YAAY,CAACC,OAAb,CACE,UADF,EAEEC,IAAI,CAACC,SAAL,CAAe;AACZhB,MAAAA,MAAM,EAAES,GADI;AAEZP,MAAAA,KAAK,EAAEQ,MAFK;AAGZN,MAAAA,IAAI,EAAEO,KAHM;AAIZL,MAAAA,YAAY,EAAEM;AAJF,KAAf,CAFF;AASD,GAdwB,EActB,EAdsB,CAAzB;AAiBA,QAAMK,MAAM,GAAGvB,WAAW,CAAC,MAAM;AAC/BO,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAI,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAM,IAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB;AACD,GALyB,EAKvB,EALuB,CAA1B;AASAvB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMwB,UAAU,GAAGJ,IAAI,CAACK,KAAL,CAAWP,YAAY,CAACQ,OAAb,CAAqB,UAArB,CAAX,CAAnB;;AACA,QAAGF,UAAH,EAAe;AACbX,MAAAA,KAAK,CAACW,UAAU,CAACnB,MAAZ,EAAoBmB,UAAU,CAACjB,KAA/B,EAAsCiB,UAAU,CAACf,IAAjD,EAAuDe,UAAU,CAACb,YAAlE,CAAL;AACD;AAEF,GANQ,EAMP,CAACE,KAAD,CANO,CAAT;AAOA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAC3BN,MAAAA,KAAK,EAAEA,KADoB;AAG3BF,MAAAA,MAAM,EAAEA,MAHmB;AAI3BI,MAAAA,IAAI,EAAEA,IAJqB;AAK3BE,MAAAA,YAL2B;AAM3BgB,MAAAA,UAAU,EAAEtB,MAAM,KAAK,IANI;AAO3BQ,MAAAA,KAP2B;AAQ3BS,MAAAA;AAR2B,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAUKlB,QAVL,CADF;AAgBD,CAzDM","sourcesContent":["import React, {createContext, useCallback, useEffect, useState} from 'react';\n\n\nexport const AuthContext = createContext({});\n\nexport const AuthProvider = ({children}) => {\n  const [userId, setUserId] = useState(null);\n  const [token, setToken] = useState(null);\n  const [role, setRole] = useState('');\n  const [userBookList, setUserBookList] = useState([]);\n\n\n\n  const login = useCallback( (uid, utoken, urole, uBookList) => {\n    setUserId(uid);\n    setUserId(utoken);\n    setRole(urole);\n    setUserBookList(uBookList)\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n         userId: uid,\n         token: utoken,\n         role: urole,\n         userBookList: uBookList\n      })\n    )\n  }, []);\n\n  \n  const logout = useCallback(() => {\n    setUserId(null);\n    setToken(null);\n    setUserBookList(null);\n    localStorage.removeItem('userData');\n  }, []); \n\n\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if(storedData) {\n      login(storedData.userId, storedData.token, storedData.role, storedData.userBookList);\n    }\n\n  },[login]);\n  return(\n    <AuthContext.Provider value={{\n      token: token,\n\n      userId: userId,\n      role: role,\n      userBookList,\n      isLoggedIn: userId !== null,\n      login,\n      logout\n      \n    }}> {children}\n    </AuthContext.Provider>\n  )\n\n\n}"]},"metadata":{},"sourceType":"module"}