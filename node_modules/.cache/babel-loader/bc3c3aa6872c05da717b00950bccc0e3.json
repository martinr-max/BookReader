{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/book_app/src/auth/adminLogin/AdminLogin.js\";\nimport React, { useState, useCallback, useContext } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Alert from '@material-ui/lab/Alert';\nimport { useHistory } from 'react-router-dom';\nimport './AdminLogin.css';\nimport axios from 'axios';\nimport { AuthContext } from '../../context/AuthContext';\nimport CircularIndeterminate from '../../shared/progressCircle/ProgressCircle';\nexport default function AdminLogin() {\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n    role: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsloading] = useState(false);\n  const history = useHistory();\n  const auth = useContext(AuthContext);\n\n  const handleChange = event => {\n    event.persist();\n    setUser(user => ({ ...user,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleSubmit = useCallback(async event => {\n    event.preventDefault();\n    setIsloading(true);\n\n    try {\n      const responseData = await axios.post('http://localhost:8000/api/admin/login', user);\n      const userId = responseData.data.id; //const token = responseData.data.accessToken;\n\n      const role = responseData.data.roles;\n      auth.login(userId, role[0].id);\n      history.push('/admin/adminpanel');\n    } catch (err) {\n      setError(err.response.data.message);\n    }\n  }, [auth, history, user]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 8\n    }\n  }, error && /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 22\n    }\n  }, \" \", error, \" \"), isLoading && !error && /*#__PURE__*/React.createElement(CircularIndeterminate, {\n    size: \"7rem\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 34\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"LoginForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Admin Login\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"input\",\n    label: \"E-mail\",\n    type: \"email\",\n    name: \"email\",\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"input\",\n    label: \"Password\",\n    type: \"password\",\n    name: \"password\",\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"loginButton\",\n    color: \"primary\",\n    variant: \"contained\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"LOG IN\"))));\n}","map":{"version":3,"sources":["/Users/martinraba/Desktop/book_app/src/auth/adminLogin/AdminLogin.js"],"names":["React","useState","useCallback","useContext","TextField","Button","Container","Alert","useHistory","axios","AuthContext","CircularIndeterminate","AdminLogin","user","setUser","email","password","role","error","setError","isLoading","setIsloading","history","auth","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","responseData","post","userId","data","id","roles","login","push","err","response","message"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useContext } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Alert from '@material-ui/lab/Alert';\nimport { useHistory } from 'react-router-dom';\nimport './AdminLogin.css'\nimport axios from 'axios';\nimport { AuthContext } from '../../context/AuthContext';\nimport CircularIndeterminate from '../../shared/progressCircle/ProgressCircle';\n\nexport default function AdminLogin() {\n\n    const [user, setUser] = useState({\n       email: \"\",\n       password: \"\",\n       role: \"\"\n     });\n     const [error, setError] = useState(\"\");\n     const [isLoading, setIsloading] = useState(false)\n\n     const history = useHistory();\n     const auth = useContext(AuthContext)\n  \n    const handleChange = (event) => {\n       event.persist();\n       setUser(user => ({\n         ...user,\n         [event.target.name]: event.target.value\n     }));\n    }    \n    \n    const handleSubmit =   useCallback( async (event) => {\n       event.preventDefault();\n       setIsloading(true);\n      try {\n        const responseData = await axios.post('http://localhost:8000/api/admin/login', user)\n        \n        const userId = responseData.data.id;\n        //const token = responseData.data.accessToken;\n        const role = responseData.data.roles;\n        auth.login( userId, role[0].id);\n          history.push('/admin/adminpanel' )\n        \n       \n      }\n      catch(err) {\n        setError(err.response.data.message);\n      }\n       \n   }, [auth, history, user])\n\n\n    return(\n       <React.Fragment>\n         { error &&  <Alert severity=\"error\"> { error } </Alert> }\n         {isLoading && !error && <CircularIndeterminate size=\"7rem\" color=\"primary\" />}\n        <Container> \n        <form  className=\"LoginForm\" onSubmit={handleSubmit} >\n            <h1>Admin Login</h1>\n\n            <TextField \n             id=\"input\"\n            label=\"E-mail\"\n            type=\"email\"\n            name=\"email\"\n            required\n            onChange={handleChange} />\n            <TextField\n             id=\"input\"\n            label=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            required\n            onChange={handleChange} />\n         \n          <Button\n            className=\"loginButton\"\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\" >\n                 LOG IN\n            </Button> \n           \n        </form>\n       \n        </Container>\n        </React.Fragment>\n    )\n\n}\n\n"]},"metadata":{},"sourceType":"module"}