{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/book_app/src/Books/GeneralBooklist/GeneralBooklist.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport BookCard from '../../shared/Card/Card';\nimport './GeneralBooklist.css';\nimport CircularIndeterminate from '../../shared/progressCircle/ProgressCircle';\nimport { Container } from '@material-ui/core';\nimport FlipCard from 'react-flipcard';\nexport default React.memo(function GeneralBookList() {\n  const [loadedBook, setLoadedBook] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [openFlipCard, setOpenFlipCard] = useState(false);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const responseData = await axios.get('http://localhost:8000/api/bookBlog/books/');\n        const books = responseData.data.books;\n        setLoadedBook(books);\n        setIsLoading(false);\n      } catch (err) {\n        setError(err.response.data.message);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(CircularIndeterminate, {\n    size: \"7rem\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"all_books_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \" All Books\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"bookList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, loadedBook && loadedBook.map(book => {\n    return /*#__PURE__*/React.createElement(BookCard, {\n      key: book.id,\n      id: book.id,\n      title: book.title,\n      author: book.author,\n      pages: book.pages,\n      description: book.description,\n      imageUrl: book.imageUrl,\n      year: book.year,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }\n    });\n  }))));\n});","map":{"version":3,"sources":["/Users/martinraba/Desktop/book_app/src/Books/GeneralBooklist/GeneralBooklist.js"],"names":["React","useState","useEffect","axios","BookCard","CircularIndeterminate","Container","FlipCard","memo","GeneralBookList","loadedBook","setLoadedBook","isLoading","setIsLoading","openFlipCard","setOpenFlipCard","error","setError","fetchData","responseData","get","books","data","err","response","message","map","book","id","title","author","pages","description","imageUrl","year"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAO,uBAAP;AACA,OAAOC,qBAAP,MAAkC,4CAAlC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAIA,eAAeP,KAAK,CAACQ,IAAN,CAAW,SAASC,eAAT,GAA2B;AAEjD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AAGAC,EAAAA,SAAS,CAAE,MAAM;AACTW,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAMK,SAAS,GAAG,YAAY;AAC1B,UAAG;AACC,cAAMC,YAAY,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAU,2CAAV,CAA3B;AACA,cAAMC,KAAK,GAAGF,YAAY,CAACG,IAAb,CAAkBD,KAAhC;AACAV,QAAAA,aAAa,CAACU,KAAD,CAAb;AACAR,QAAAA,YAAY,CAAC,KAAD,CAAZ;AAEH,OAND,CAME,OAAMU,GAAN,EAAW;AACTN,QAAAA,QAAQ,CAACM,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBG,OAAnB,CAAR;AACH;AAEJ,KAXD;;AAYAP,IAAAA,SAAS;AAChB,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBAEI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,SAAS,iBAAI,oBAAC,qBAAD;AAAuB,IAAA,IAAI,EAAC,MAA5B;AAAmC,IAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlB,eAEQ,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEQ;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCF,UAAU,IAAKA,UAAU,CAACgB,GAAX,CAAeC,IAAI,IAAI;AACvC,wBAAQ,oBAAC,QAAD;AACJ,MAAA,GAAG,EAAIA,IAAI,CAACC,EADR;AAEJ,MAAA,EAAE,EAAID,IAAI,CAACC,EAFP;AAGJ,MAAA,KAAK,EAAED,IAAI,CAACE,KAHR;AAIJ,MAAA,MAAM,EAAEF,IAAI,CAACG,MAJT;AAKJ,MAAA,KAAK,EAAEH,IAAI,CAACI,KALR;AAMJ,MAAA,WAAW,EAAEJ,IAAI,CAACK,WANd;AAOJ,MAAA,QAAQ,EAAGL,IAAI,CAACM,QAPZ;AAQJ,MAAA,IAAI,EAAEN,IAAI,CAACO,IARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AASI,GAVY,CADhB,CAFR,CAFR,CAFJ;AAsBH,CA/Cc,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport BookCard from '../../shared/Card/Card';\nimport './GeneralBooklist.css';\nimport CircularIndeterminate from '../../shared/progressCircle/ProgressCircle';\nimport { Container } from '@material-ui/core';\nimport FlipCard from 'react-flipcard';\n\n\n\nexport default React.memo(function GeneralBookList() {\n\n    const [loadedBook, setLoadedBook] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [openFlipCard, setOpenFlipCard] = useState(false);\n    const [error, setError] = useState(\"\");\n\n\n    useEffect( () => {\n            setIsLoading(true);\n            const fetchData = async () => {\n                try{\n                    const responseData = await axios.get('http://localhost:8000/api/bookBlog/books/');\n                    const books = responseData.data.books;\n                    setLoadedBook(books);\n                    setIsLoading(false);\n\n                } catch(err) {\n                    setError(err.response.data.message)\n                }\n\n            }\n            fetchData();       \n    }, []);\n\n    return(\n             \n        <React.Fragment>\n            {isLoading && <CircularIndeterminate size=\"7rem\" color=\"primary\" />}\n                <Container className=\"all_books_container\" >\n                    <h2 > All Books</h2>\n                        <ul className=\"bookList\">     \n                        {loadedBook &&  loadedBook.map(book => {\n                        return  <BookCard\n                            key = {book.id}\n                            id = {book.id}\n                            title={book.title}\n                            author={book.author}\n                            pages={book.pages}\n                            description={book.description}\n                            imageUrl= {book.imageUrl}\n                            year={book.year}\n                        /> })} \n                        </ul>       \n                </Container>   \n        </React.Fragment>\n    )\n})"]},"metadata":{},"sourceType":"module"}