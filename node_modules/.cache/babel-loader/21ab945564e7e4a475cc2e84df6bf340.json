{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/book_app/src/navigation/searchEngine/SearchEngine.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport SearchInput from '../searchInput/SearchInput';\nimport SearchResultsPage from '../searchResultsPage/SearchResultsPAge';\nconst Search = React.memo(props => {\n  const [enteredFilter, setEnteredFilter] = useState('');\n  const inputRef = useRef();\n  const [loadedBooks, setLoadedBooks] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/bookBlog/books/').then(response => {\n      const books = response.data.books;\n      setLoadedBooks(books);\n    }).catch(err => console.log(err));\n  }, []);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (enteredFilter === inputRef.current.value) {\n        const query = enteredFilter.length === 0 ? '' : `?orderBy=\"title\"&equalTo=\"${enteredFilter}\"`;\n        fetch('http://localhost:8000/api/bookBlog/books/' + query).then(response => response.json()).then(responseData => {\n          const loadedBooks = [];\n\n          for (const key in responseData) {\n            loadedBooks.push({\n              id: key,\n              title: responseData[key].title,\n              author: responseData[key].author\n            });\n          }\n\n          setLoadedBooks(loadedBooks);\n        });\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [enteredFilter, loadedBooks, inputRef]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Filter by Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    type: \"text\",\n    value: enteredFilter,\n    onChange: event => setEnteredFilter(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  })));\n});\nexport default Search;","map":{"version":3,"sources":["/Users/martinraba/Desktop/book_app/src/navigation/searchEngine/SearchEngine.js"],"names":["React","useState","useEffect","useRef","SearchInput","SearchResultsPage","Search","memo","props","enteredFilter","setEnteredFilter","inputRef","loadedBooks","setLoadedBooks","axios","get","then","response","books","data","catch","err","console","log","timer","setTimeout","current","value","query","length","fetch","json","responseData","key","push","id","title","author","clearTimeout","event","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AAEA,MAAMC,MAAM,GAAGN,KAAK,CAACO,IAAN,CAAWC,KAAK,IAAI;AAEjC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAMU,QAAQ,GAAGR,MAAM,EAAvB;AAEA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AAEEC,EAAAA,SAAS,CAAE,MAAM;AAEVY,IAAAA,KAAK,CAACC,GAAN,CAAU,2CAAV,EACCC,IADD,CACOC,QAAQ,IAAI;AACf,YAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAT,CAAcD,KAA5B;AACAL,MAAAA,cAAc,CAACK,KAAD,CAAd;AACH,KAJD,EAKCE,KALD,CAKOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALd;AAMN,GARQ,EAQN,EARM,CAAT;AAWFnB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7B,UAAIhB,aAAa,KAAKE,QAAQ,CAACe,OAAT,CAAiBC,KAAvC,EAA8C;AAC5C,cAAMC,KAAK,GACTnB,aAAa,CAACoB,MAAd,KAAyB,CAAzB,GACI,EADJ,GAEK,6BAA4BpB,aAAc,GAHjD;AAIAqB,QAAAA,KAAK,CACH,8CAA8CF,KAD3C,CAAL,CAGGZ,IAHH,CAGQC,QAAQ,IAAIA,QAAQ,CAACc,IAAT,EAHpB,EAIGf,IAJH,CAIQgB,YAAY,IAAI;AACpB,gBAAMpB,WAAW,GAAG,EAApB;;AACA,eAAK,MAAMqB,GAAX,IAAkBD,YAAlB,EAAgC;AAC9BpB,YAAAA,WAAW,CAACsB,IAAZ,CAAiB;AACfC,cAAAA,EAAE,EAAEF,GADW;AAEfG,cAAAA,KAAK,EAAEJ,YAAY,CAACC,GAAD,CAAZ,CAAkBG,KAFV;AAGfC,cAAAA,MAAM,EAAEL,YAAY,CAACC,GAAD,CAAZ,CAAkBI;AAHX,aAAjB;AAKD;;AACDxB,UAAAA,cAAc,CAACD,WAAD,CAAd;AACD,SAdH;AAeD;AACF,KAtBuB,EAsBrB,GAtBqB,CAAxB;AAuBA,WAAO,MAAM;AACX0B,MAAAA,YAAY,CAACd,KAAD,CAAZ;AACD,KAFD;AAGD,GA3BQ,EA2BN,CAACf,aAAD,EAAgBG,WAAhB,EAA6BD,QAA7B,CA3BM,CAAT;AA6BA,sBACE;AAAS,IAAA,SAAS,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AACE,IAAA,GAAG,EAAEA,QADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEF,aAHT;AAIE,IAAA,QAAQ,EAAE8B,KAAK,IAAI7B,gBAAgB,CAAC6B,KAAK,CAACC,MAAN,CAAab,KAAd,CAJrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADJ,CADF;AAaD,CA5Dc,CAAf;AA+DA,eAAerB,MAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport SearchInput from '../searchInput/SearchInput';\nimport SearchResultsPage from '../searchResultsPage/SearchResultsPAge';\n\nconst Search = React.memo(props => {\n\n  const [enteredFilter, setEnteredFilter] = useState('');\n  const inputRef = useRef();\n\n  const [loadedBooks, setLoadedBooks] = useState([]);\n\n    useEffect( () => {\n        \n           axios.get('http://localhost:8000/api/bookBlog/books/')\n           .then( response => {\n               const books = response.data.books;\n               setLoadedBooks(books)\n           })\n           .catch(err => console.log(err))       \n    }, []);\n    \n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (enteredFilter === inputRef.current.value) {\n        const query =\n          enteredFilter.length === 0\n            ? ''\n            : `?orderBy=\"title\"&equalTo=\"${enteredFilter}\"`;\n        fetch(\n          'http://localhost:8000/api/bookBlog/books/' + query\n        )\n          .then(response => response.json())\n          .then(responseData => {\n            const loadedBooks = [];\n            for (const key in responseData) {\n              loadedBooks.push({\n                id: key,\n                title: responseData[key].title,\n                author: responseData[key].author\n              });\n            }\n            setLoadedBooks(loadedBooks);\n          });\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [enteredFilter, loadedBooks, inputRef]);\n\n  return (\n    <section className=\"search\">\n        <div className=\"search-input\">\n          <label>Filter by Title</label>\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={enteredFilter}\n            onChange={event => setEnteredFilter(event.target.value)}\n          />\n        </div>\n    </section>\n  );\n});\n\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}