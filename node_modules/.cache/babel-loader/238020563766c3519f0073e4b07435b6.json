{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/book_app/src/Books/userBooksList/UserBookList.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport './UserBookList.css';\nimport UserBooklistItem from '../userBooklistItem/UserBooklistItem';\nexport default function UserBookList() {\n  const [loadedBook, setLoadedBook] = useState([]);\n  const [bookIndex, setBookIndex] = useState();\n  const userId = useParams().userId;\n  const [open, setOpen] = useState(false);\n\n  const handleclickOpen = index => {\n    let bookId = index;\n    setBookIndex(bookId);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    const getUseBooks = async () => {\n      try {\n        const userBooks = await axios.get('http://localhost:8000/api/bookBlog/booklist/' + userId);\n        setLoadedBook(userBooks.data.books);\n      } catch (err) {\n        console.log(err.message);\n      }\n    };\n\n    return getUseBooks();\n  }, [userId]);\n\n  const handleDeleteUserBook = id => {\n    id = bookIndex;\n    setOpen(false);\n    fetch('http://localhost:8000/api/bookBlog/booklist/delete/' + userId, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: id\n      })\n    }).then(response => {\n      return response.json();\n    }).then(deletedBook => {\n      let newArray = loadedBook.filter(book => book.id !== deletedBook.id);\n      setLoadedBook(newArray);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Your Booklist\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"userBookList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, loadedBook.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"listIsEmpty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \" Your list is empty. Maybe add some book?\") : loadedBook && loadedBook.map(book => {\n    return /*#__PURE__*/React.createElement(UserBooklistItem, {\n      key: book.id,\n      id: book.id,\n      title: book.title,\n      author: book.author,\n      imageUrl: book.imageUrl,\n      open: open,\n      handleclickOpen: handleclickOpen,\n      handleClose: handleClose,\n      bookIndex: bookIndex,\n      handleDeleteUserBook: handleDeleteUserBook,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 24\n      }\n    });\n  })));\n}","map":{"version":3,"sources":["/Users/martinraba/Desktop/book_app/src/Books/userBooksList/UserBookList.js"],"names":["React","useState","useEffect","axios","Container","useParams","UserBooklistItem","UserBookList","loadedBook","setLoadedBook","bookIndex","setBookIndex","userId","open","setOpen","handleclickOpen","index","bookId","handleClose","getUseBooks","userBooks","get","data","books","err","console","log","message","handleDeleteUserBook","id","fetch","method","headers","body","JSON","stringify","then","response","json","deletedBook","newArray","filter","book","catch","length","map","title","author","imageUrl"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport './UserBookList.css';\nimport UserBooklistItem from '../userBooklistItem/UserBooklistItem';\n\nexport default function UserBookList() {\n\n    const [loadedBook, setLoadedBook] = useState([]);\n    const [bookIndex, setBookIndex] = useState()\n\n    const userId = useParams().userId;\n\n    const [open, setOpen] = useState(false);\n\n    const handleclickOpen = (index) => {\n        let bookId = index;\n         setBookIndex(bookId);\n         setOpen(true);\n       };\n   \n       const handleClose = () => {\n         setOpen(false);\n       }\n\n    useEffect( () => {\n\n        const getUseBooks = async () => {\n            try{\n                const userBooks = await axios.get('http://localhost:8000/api/bookBlog/booklist/' + userId )\n                setLoadedBook(userBooks.data.books);\n            \n            } catch(err) {\n                console.log(err.message)\n            }\n            \n        }\n        return getUseBooks();    \n            \n    }, [userId]);\n\n\n   \n    const handleDeleteUserBook = (id) =>{ \n        id = bookIndex;\n        setOpen(false)\n         fetch('http://localhost:8000/api/bookBlog/booklist/delete/' + userId,\n         {\n             method: \"DELETE\",\n            headers:{'Content-Type': 'application/json'} ,\n            body: JSON.stringify({id: id})\n         })\n        .then( response => {\n           return response.json()\n            \n        })\n        .then((deletedBook) => {\n            let newArray = loadedBook.filter(book => book.id !== deletedBook.id);\n            setLoadedBook(newArray)\n        })\n        .catch(err => console.log(err))       \n    }\n    \n    return(\n        <Container className=\"container\">\n        <h3>Your Booklist</h3>\n        \n        <ul className=\"userBookList\">\n        {loadedBook.length === 0 ?\n            <p className=\"listIsEmpty\"> Your list is empty. Maybe add some book?</p>\n             :\n            loadedBook &&  loadedBook.map(book => {\n                return <UserBooklistItem\n                    key = {book.id}\n                    id = {book.id}\n                    title={book.title}\n                    author={book.author}\n                    imageUrl= {book.imageUrl}\n                    open={open}\n                    handleclickOpen={handleclickOpen}\n                    handleClose={handleClose}\n                    bookIndex={bookIndex}\n                    handleDeleteUserBook= {handleDeleteUserBook}\n             />})\n        }\n        </ul>\n        </Container>\n    )\n}"]},"metadata":{},"sourceType":"module"}