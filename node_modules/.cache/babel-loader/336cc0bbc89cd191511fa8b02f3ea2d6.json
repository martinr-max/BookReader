{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/book_app/src/auth/adminLogin/AdminLogin.js\";\nimport React, { useState, useCallback, useContext } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Alert from '@material-ui/lab/Alert';\nimport { useHistory } from 'react-router-dom';\nimport './AdminLogin.css';\nimport axios from 'axios';\nimport { AuthContext } from '../../context/AuthContext';\nimport CircularIndeterminate from '../../shared/progressCircle/ProgressCircle';\nexport default function AdminLogin() {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [isLoading, setIsloading] = useState(false);\n  const history = useHistory();\n  const auth = useContext(AuthContext);\n\n  const onSubmit = async data => {\n    let user = data;\n\n    try {\n      const responseData = await axios.post('http://localhost:8000/api/user/login', user);\n\n      if (responseData) {\n        const userId = responseData.data.id; //const token = responseData.data.accessToken\n\n        const role = responseData.data.roles;\n        const booklist = responseData.data.booklist;\n        auth.login(userId, role[0], booklist);\n        history.push('/' + userId + '/booklist');\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 8\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(CircularIndeterminate, {\n    size: \"7rem\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 26\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"LoginForm\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"input\",\n    label: \"E-mail\",\n    type: \"email\",\n    name: \"email\",\n    defaultValue: \"\",\n    inputRef: register({\n      required: true,\n      minLength: 6\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), errors.email && \"Email is required\", /*#__PURE__*/React.createElement(TextField, {\n    id: \"input\",\n    label: \"Password\",\n    type: \"password\",\n    name: \"password\",\n    defaultValue: \"\",\n    inputRef: register({\n      required: true,\n      minLength: 6\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), errors.password && \"Password is required\", /*#__PURE__*/React.createElement(Button, {\n    className: \"loginButton\",\n    color: \"primary\",\n    variant: \"contained\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"LOG IN\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin/adminlogin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Admin?\"))));\n}","map":{"version":3,"sources":["/Users/martinraba/Desktop/book_app/src/auth/adminLogin/AdminLogin.js"],"names":["React","useState","useCallback","useContext","TextField","Button","Container","Alert","useHistory","axios","AuthContext","CircularIndeterminate","AdminLogin","register","handleSubmit","errors","useForm","isLoading","setIsloading","history","auth","onSubmit","data","user","responseData","post","userId","id","role","roles","booklist","login","push","err","console","log","message","required","minLength","email","password"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useContext } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Alert from '@material-ui/lab/Alert';\nimport { useHistory } from 'react-router-dom';\nimport './AdminLogin.css'\nimport axios from 'axios';\nimport { AuthContext } from '../../context/AuthContext';\nimport CircularIndeterminate from '../../shared/progressCircle/ProgressCircle';\n\nexport default function AdminLogin() {\n\n  const { register, handleSubmit, errors } = useForm();\n  const [isLoading, setIsloading] = useState(false);\n  const history = useHistory();\n  const auth = useContext(AuthContext)\n  \n  const onSubmit =   async (data) => { \n      let user = data;\n      \n      try {\n        const responseData = await axios.post('http://localhost:8000/api/user/login', user)\n        if(responseData) {\n          const userId = responseData.data.id\n          //const token = responseData.data.accessToken\n          const role = responseData.data.roles\n          const booklist = responseData.data.booklist\n          auth.login(userId, role[0], booklist)\n          history.push('/' + userId +'/booklist'  )\n        } \n      }\n      catch(err) {\n        console.log(err.message)\n      }       \n   };\n\n\n    return(\n       <React.Fragment>\n           {isLoading && <CircularIndeterminate size=\"7rem\" color=\"primary\" />}\n        <Container> \n        <form  className=\"LoginForm\" onSubmit={handleSubmit(onSubmit)} >\n            <h1>Login</h1>\n            <TextField \n             id=\"input\"\n            label=\"E-mail\"\n            type=\"email\"\n            name=\"email\"\n            defaultValue=\"\"\n            inputRef={register({ required: true, minLength: 6 })}\n             />\n            {errors.email && \"Email is required\"}\n            <TextField\n             id=\"input\"\n            label=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            defaultValue=\"\"\n            inputRef={register({ required: true, minLength: 6 })}\n             />\n            {errors.password && \"Password is required\"}\n          <Button\n            className=\"loginButton\"\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\" >\n                 LOG IN\n            </Button> \n            <Link to=\"/admin/adminlogin\">Admin?</Link>\n        </form>\n       \n        </Container>\n        </React.Fragment>\n    )\n\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}