{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/book_app/src/Admin/adminPage/AdminPanel.js\";\nimport React, { useEffect, useState } from 'react';\nimport './AdminPanel.css';\nimport EditBook from '../editBook.js/EditBook';\nimport axios from 'axios';\nimport { useParams, useHistory } from 'react-router-dom';\nimport AdminTable from '../AdminTable/AdminTable';\nexport default function AdminPanel() {\n  const [loadedBooks, setLoadedBooks] = useState([]);\n  const [values, setValues] = useState();\n  const history = useHistory();\n  const bookId = useParams().bookId;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newbook = {\n      title: values.title,\n      author: values.author,\n      imageUrl: values.imageUrl,\n      year: values.year,\n      pages: values.pages,\n      description: values.description\n    };\n    setValues(newbook);\n    axios.patch(`http://localhost:8000/api/admin/books/edit/` + bookId, newbook).then(res => {\n      console.log(res.data);\n      history.push('/admin/edit/' + bookId);\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/bookBlog/books/').then(response => {\n      const books = response.data.books;\n      const bookArray = [];\n\n      for (const key in books) {\n        bookArray.push({\n          id: key,\n          bookId: books[key].id,\n          title: books[key].title,\n          author: books[key].author,\n          imageUrl: books[key].imageUrl,\n          description: books[key].description,\n          year: books[key].year,\n          pages: books[key].pages\n        });\n      }\n\n      setLoadedBooks(bookArray);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const handleChange = event => {\n    event.persist();\n    setValues(values => ({ ...values,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, loadedBooks && /*#__PURE__*/React.createElement(AdminTable, {\n    loadedBooks: loadedBooks,\n    handleChange: handleChange,\n    handleSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/martinraba/Desktop/book_app/src/Admin/adminPage/AdminPanel.js"],"names":["React","useEffect","useState","EditBook","axios","useParams","useHistory","AdminTable","AdminPanel","loadedBooks","setLoadedBooks","values","setValues","history","bookId","handleSubmit","event","preventDefault","newbook","title","author","imageUrl","year","pages","description","patch","then","res","console","log","data","push","catch","err","get","response","books","bookArray","key","id","handleChange","persist","target","name","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './AdminPanel.css'\nimport EditBook from '../editBook.js/EditBook';\nimport axios from 'axios';\nimport {useParams, useHistory} from 'react-router-dom'\nimport AdminTable from '../AdminTable/AdminTable';\n\nexport default function AdminPanel() {\n\n\n    const [loadedBooks, setLoadedBooks] = useState([])\n    const [values, setValues] = useState();\n    const history = useHistory();\n\n    const bookId = useParams().bookId;\n    \n    \n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const newbook = {\n          title: values.title,\n          author: values.author,\n          imageUrl: values.imageUrl,\n          year: values.year,\n          pages: values.pages,\n          description: values.description\n        } \n        setValues(newbook);\n\n        axios.patch (`http://localhost:8000/api/admin/books/edit/` + bookId, newbook)\n        .then(res => {\n          console.log(res.data);\n          history.push('/admin/edit/' + bookId);\n          \n        })\n        .catch(err => console.log(err))\n    }; \n\n \n\n    useEffect( () => {\n        \n        axios.get('http://localhost:8000/api/bookBlog/books/')\n        .then( response => {\n            const books = response.data.books;\n            const bookArray = []\n            for(const key in books) {\n              bookArray.push({\n                id: key,\n                bookId: books[key].id,\n                title: books[key].title,\n                author: books[key].author,\n                imageUrl: books[key].imageUrl,\n                description: books[key].description,\n                year: books[key].year,\n                pages: books[key].pages\n              })\n              \n            } \n            setLoadedBooks(bookArray)   \n     \n        })\n        .catch(err => console.log(err))       \n }, []);\n\n const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({\n      ...values,\n      [event.target.name]: event.target.value\n  }));\n }\n\n    return (\n        <React.Fragment>\n            {loadedBooks && <AdminTable loadedBooks={loadedBooks} handleChange={handleChange} handleSubmit={handleSubmit} /> }\n        </React.Fragment>\n      );\n    \n\n}\n\n"]},"metadata":{},"sourceType":"module"}