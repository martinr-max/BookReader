{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/book_app/src/Books/GeneralBooklist/GeneralBooklist.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport BookCard from '../../shared/Card/Card';\nimport './GeneralBooklist.css';\nimport CircularIndeterminate from '../../shared/progressCircle/ProgressCircle';\nimport { Container } from '@material-ui/core';\nexport default React.memo(function GeneralBookList() {\n  const [loadedBook, setLoadedBook] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const responseData = await axios.get('http://localhost:8000/api/bookBlog/books/');\n        const books = responseData.data;\n        setLoadedBook(books);\n        setIsLoading(false);\n      } catch (err) {\n        setError(err.response.data.message);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }\n  }, isLoading && !error && /*#__PURE__*/React.createElement(CircularIndeterminate, {\n    size: \"7rem\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"all_books_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \" All Books\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"bookList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, loadedBook && loadedBook.map(book => {\n    return /*#__PURE__*/React.createElement(BookCard, {\n      key: book.id,\n      id: book.id,\n      title: book.title,\n      author: book.author,\n      pages: book.pages,\n      description: book.description,\n      imageUrl: book.imageUrl,\n      year: book.year,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    });\n  }))));\n});","map":{"version":3,"sources":["/Users/martinraba/Desktop/book_app/src/Books/GeneralBooklist/GeneralBooklist.js"],"names":["React","useState","useEffect","axios","BookCard","CircularIndeterminate","Container","memo","GeneralBookList","loadedBook","setLoadedBook","isLoading","setIsLoading","error","setError","fetchData","responseData","get","books","data","err","response","message","map","book","id","title","author","pages","description","imageUrl","year"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAO,uBAAP;AACA,OAAOC,qBAAP,MAAkC,4CAAlC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAGA,eAAeN,KAAK,CAACO,IAAN,CAAW,SAASC,eAAT,GAA2B;AAEpD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACG,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AAEHC,EAAAA,SAAS,CAAC,MAAM;AACfU,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAMG,SAAS,GAAG,YAAY;AAC7B,UAAI;AACH,cAAMC,YAAY,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,2CAAV,CAA3B;AACA,cAAMC,KAAK,GAAGF,YAAY,CAACG,IAA3B;AACAT,QAAAA,aAAa,CAACQ,KAAD,CAAb;AACAN,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,OALD,CAKE,OAAOQ,GAAP,EAAY;AACbN,QAAAA,QAAQ,CAACM,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBG,OAAnB,CAAR;AACA;AACD,KATD;;AAUAP,IAAAA,SAAS;AACN,GAbK,EAaH,EAbG,CAAT;AAeA,sBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIJ,SAAS,IAAI,CAACE,KAAd,iBACD,oBAAC,qBAAD;AAAuB,IAAA,IAAI,EAAC,MAA5B;AAAmC,IAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,eAGO,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFJ,UAAU,IAAIA,UAAU,CAACc,GAAX,CAAeC,IAAI,IAAI;AACtC,wBAAO,oBAAC,QAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,MAAA,EAAE,EAAED,IAAI,CAACC,EAFX;AAGE,MAAA,KAAK,EAAED,IAAI,CAACE,KAHd;AAIE,MAAA,MAAM,EAAEF,IAAI,CAACG,MAJf;AAKE,MAAA,KAAK,EAAEH,IAAI,CAACI,KALd;AAME,MAAA,WAAW,EAAEJ,IAAI,CAACK,WANpB;AAOE,MAAA,QAAQ,EAAEL,IAAI,CAACM,QAPjB;AAQE,MAAA,IAAI,EAAEN,IAAI,CAACO,IARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAQ8B,GATf,CADZ,CAFD,CAHP,CADD;AAqBA,CA1Cc,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport BookCard from '../../shared/Card/Card';\nimport './GeneralBooklist.css';\nimport CircularIndeterminate from '../../shared/progressCircle/ProgressCircle';\nimport { Container } from '@material-ui/core';\n\n\nexport default React.memo(function GeneralBookList() {\n\n\tconst [loadedBook, setLoadedBook] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(\"\");\n    \n\tuseEffect(() => {\n\t\tsetIsLoading(true);\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tconst responseData = await axios.get('http://localhost:8000/api/bookBlog/books/');\n\t\t\t\tconst books = responseData.data;\n\t\t\t\tsetLoadedBook(books);\n\t\t\t\tsetIsLoading(false);\n\t\t\t} catch (err) {\n\t\t\t\tsetError(err.response.data.message);\n\t\t\t}\n\t\t}\n\t\tfetchData();\n    }, []);\n    \n\treturn (\n\t\t<React.Fragment>\n\t    {isLoading && !error &&\n\t    <CircularIndeterminate size=\"7rem\" color=\"primary\" />}\n\t        <Container className=\"all_books_container\">\n\t\t        <h2> All Books</h2>\n\t\t        <ul className=\"bookList\">\n\t\t\t    {loadedBook && loadedBook.map(book => {\n\t\t\t    return <BookCard\n                key={book.id}\n                id={book.id}\n                title={book.title}\n                author={book.author}\n                pages={book.pages}\n                description={book.description}\n                imageUrl={book.imageUrl}\n                year={book.year} /> })}\n\t\t    </ul>\n\t        </Container>\n        </React.Fragment>\n\t);\n})"]},"metadata":{},"sourceType":"module"}