{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/book_app/src/routes/Routes.js\";\nimport React, { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport Home from '../home';\nimport AddBook from '../Admin/addBook/AddBook';\nimport UserBookList from '../Books/userBooksList/UserBookList';\nimport GeneralBookList from '../Books/GeneralBooklist/GeneralBooklist';\nimport SingleBookPage from '../Books/SingleBookPage/SingleBookPage';\nimport EditBook from '../Admin/editBook/EditBook';\nimport AdminPanel from '../Admin/adminPage/AdminPanel';\nimport AdminTable from '../Admin/AdminTable/AdminTable';\nimport Signup from '../auth/signup/Signup';\nimport Login from '../auth/login/Login';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport AppHeader from '../navigation/header/Header';\nexport default function MyRoutes() {\n  const {\n    userId,\n    role\n  } = useContext(AuthContext);\n  console.log(role);\n  let routes;\n\n  if (role === 1) {\n    routes = /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: Home,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/books/new\",\n      component: AddBook,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/booklist/:userId\",\n      component: UserBookList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/books/\",\n      component: GeneralBookList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/book/:bookId\",\n      component: SingleBookPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/user/login\",\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }));\n  } else if (role === 3) {\n    routes = /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/admin/adminpanel\",\n      component: AdminPanel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/books/new\",\n      component: AddBook,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/admin/admintable\",\n      component: AdminTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/admin/edit/:bookId\",\n      component: EditBook,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/books/\",\n      component: GeneralBookList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/user/login\",\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }));\n  } else {\n    routes = /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/user/signup\",\n      component: Signup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/user/login\",\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/user/login\",\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), routes);\n}","map":{"version":3,"sources":["/Users/martinraba/Desktop/book_app/src/routes/Routes.js"],"names":["React","useContext","AuthContext","Home","AddBook","UserBookList","GeneralBookList","SingleBookPage","EditBook","AdminPanel","AdminTable","Signup","Login","BrowserRouter","Router","Route","Switch","Redirect","AppHeader","MyRoutes","userId","role","console","log","routes"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport Home from '../home';\nimport AddBook from '../Admin/addBook/AddBook';\nimport UserBookList from '../Books/userBooksList/UserBookList';\nimport GeneralBookList from '../Books/GeneralBooklist/GeneralBooklist';\nimport SingleBookPage from '../Books/SingleBookPage/SingleBookPage';\nimport EditBook from '../Admin/editBook/EditBook';\nimport AdminPanel from '../Admin/adminPage/AdminPanel';\nimport AdminTable from '../Admin/AdminTable/AdminTable';\nimport Signup from '../auth/signup/Signup';\nimport Login from '../auth/login/Login';\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\nimport AppHeader from '../navigation/header/Header';\n\n\n\nexport default function MyRoutes() {\n    \n    const {userId, role} = useContext(AuthContext)\n    console.log(role)\n    let routes\n\n    if(role === 1 ) {\n        routes = (\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/books/new\" component={AddBook}  />\n            <Route path=\"/booklist/:userId\" component={UserBookList} />\n            <Route path=\"/books/\" component={GeneralBookList} />\n            <Route path=\"/book/:bookId\" component={SingleBookPage} />\n            <Redirect to=\"/user/login\" component={Login} />\n          </Switch>\n        )} \n     else if(role === 3) {\n         routes = (\n           <Switch>\n            <Route path=\"/admin/adminpanel\"  component={AdminPanel} />\n            <Route path=\"/books/new\" component={AddBook}  />\n            <Route path=\"/admin/admintable\" component={AdminTable} />\n            <Route path=\"/admin/edit/:bookId\" component={EditBook} />\n            <Route path=\"/books/\" component={GeneralBookList} />\n            <Redirect to=\"/user/login\" component={Login} />\n\n            </Switch>\n        )}\n            else {\n            \n                routes=(\n                    <Switch>\n            <Route path=\"/user/signup\" component={Signup} /> \n            <Route path=\"/user/login\" component={Login} />\n            <Redirect to=\"/user/login\" component={Login} />\n          </Switch>\n\n                )\n            }\n         \n       \n       return(\n        <Router>\n            <AppHeader />\n\n      {routes}\n      </Router>\n       )\n\n\n}"]},"metadata":{},"sourceType":"module"}