{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/book_app/src/navigation/searchEngine/SearchEngine.js\";\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport axios from 'axios';\nimport SearchResultsPage from '../searchResultsPage/SearchResultsPage';\nimport { Button } from '@material-ui/core';\nimport { Redirect, useHistory, withRouter } from 'react-router-dom';\nconst Search = React.memo(props => {\n  //const [searchText, setSearchText] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState([]); //const [loadedBooks, setLoadedBooks] = useState([]);\n\n  const history = useHistory();\n  const title = useRef('');\n\n  const handleKeyPress = event => {\n    title.current = event.target.value;\n\n    if (event.key === \"Enter\") {\n      axios.get('http://localhost:8000/api/bookBlog/book/title/' + title.current).then(response => {\n        const book = response.data.book;\n        setSearchResult(book);\n      }).catch(err => console.log(err));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search\",\n    onKeyPress: handleKeyPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), searchResult.length > 0 && /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: '/results',\n      search: '?query=' + title.current,\n      state: {\n        results: searchResult\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }\n  })));\n});\nexport default withRouter(Search);","map":{"version":3,"sources":["/Users/martinraba/Desktop/book_app/src/navigation/searchEngine/SearchEngine.js"],"names":["React","useState","useEffect","useRef","useMemo","axios","SearchResultsPage","Button","Redirect","useHistory","withRouter","Search","memo","props","searchResult","setSearchResult","history","title","handleKeyPress","event","current","target","value","key","get","then","response","book","data","catch","err","console","log","length","pathname","search","state","results"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,OAA7C,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,UAA/B,QAAiD,kBAAjD;AAEA,MAAMC,MAAM,GAAGX,KAAK,CAACY,IAAN,CAAWC,KAAK,IAAI;AAE/B;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCf,KAAK,CAACC,QAAN,CAAe,EAAf,CAAxC,CAH+B,CAI/B;;AACA,QAAMe,OAAO,GAAGP,UAAU,EAA1B;AAEA,QAAMQ,KAAK,GAAGd,MAAM,CAAC,EAAD,CAApB;;AACA,QAAMe,cAAc,GAAIC,KAAD,IAAW;AAC9BF,IAAAA,KAAK,CAACG,OAAN,GAAgBD,KAAK,CAACE,MAAN,CAAaC,KAA7B;;AACA,QAAGH,KAAK,CAACI,GAAN,KAAc,OAAjB,EAA0B;AACtBlB,MAAAA,KAAK,CAACmB,GAAN,CAAU,mDAAmDP,KAAK,CAACG,OAAnE,EACCK,IADD,CACOC,QAAQ,IAAI;AACf,cAAMC,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAcD,IAA3B;AACAZ,QAAAA,eAAe,CAACY,IAAD,CAAf;AACH,OAJD,EAKCE,KALD,CAKOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALd;AAOH;AACJ,GAXD;;AAcF,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,QAFhB;AAGI,IAAA,UAAU,EAAEZ,cAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAMDJ,YAAY,CAACmB,MAAb,GAAsB,CAAtB,iBACD,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AACXC,MAAAA,QAAQ,EAAE,UADC;AAEXC,MAAAA,MAAM,EAAE,YAAYlB,KAAK,CAACG,OAFf;AAGXgB,MAAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAEvB;AAAX;AAHI,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPE,CADL,CADJ;AAqBD,CA3Cc,CAAf;AA8CA,eAAeJ,UAAU,CAACC,MAAD,CAAzB","sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport axios from 'axios';\nimport SearchResultsPage from '../searchResultsPage/SearchResultsPage';\nimport { Button } from '@material-ui/core';\nimport { Redirect, useHistory, withRouter } from 'react-router-dom';\n\nconst Search = React.memo(props => {\n\n    //const [searchText, setSearchText] = React.useState('');\n    const [searchResult, setSearchResult] = React.useState([]);\n    //const [loadedBooks, setLoadedBooks] = useState([]);\n    const history = useHistory()\n\n    const title = useRef('')\n    const handleKeyPress = (event) => {\n        title.current = event.target.value;\n        if(event.key === \"Enter\") {\n            axios.get('http://localhost:8000/api/bookBlog/book/title/' + title.current) \n            .then( response => {\n                const book = response.data.book;\n                setSearchResult(book);\n            })\n            .catch(err => console.log(err))       \n\n        }\n    }\n    \n\n  return (\n      <React.Fragment>\n           <div>\n            <input\n                type=\"text\"\n                placeholder=\"Search\"\n                onKeyPress={handleKeyPress}\n        />\n         {searchResult.length > 0 &&\n         <Redirect to={{\n            pathname: '/results',\n            search: '?query=' + title.current,\n            state: { results: searchResult }\n         }} /> }\n       \n      </div>\n    \n                \n                </React.Fragment>\n\n  );\n});\n\n\nexport default withRouter(Search);"]},"metadata":{},"sourceType":"module"}