{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/book_app/src/navigation/searchEngine/SearchEngine.js\";\nimport React, { useState, useRef, useContext } from 'react';\nimport axios from 'axios';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { AuthContext } from '../../context/AuthContext';\nimport SearchInput from '../searchInput/SearchInput';\nconst Search = React.memo(() => {\n  const [searchResult, setSearchResult] = useState([]);\n  const [redirect, setRedirect] = useState(false);\n  const title = useRef('');\n  const {\n    userId\n  } = useContext(AuthContext);\n\n  const handleKeyPress = async event => {\n    title.current = event.target.value.toLowerCase().split(\"+\").join();\n\n    try {\n      if (event.key === \"Enter\") {\n        const responseData = await axios.get('http://localhost:8000/api/bookBlog/book/title/' + userId + '/' + title.current);\n        const book = responseData.data.book;\n        setSearchResult(book);\n        setRedirect(true);\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchInput, {\n    onKeyPress: handleKeyPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), redirect && /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: '/' + userId + '/results/' + title.current,\n      state: {\n        results: searchResult\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })));\n});\nexport default withRouter(Search);","map":{"version":3,"sources":["/Users/martinraba/Desktop/book_app/src/navigation/searchEngine/SearchEngine.js"],"names":["React","useState","useRef","useContext","axios","Redirect","withRouter","AuthContext","SearchInput","Search","memo","searchResult","setSearchResult","redirect","setRedirect","title","userId","handleKeyPress","event","current","target","value","toLowerCase","split","join","key","responseData","get","book","data","err","console","log","message","pathname","state","results"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,UAAlC,QAAoD,OAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,MAAMC,MAAM,GAAGT,KAAK,CAACU,IAAN,CAAW,MAAM;AAE5B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMc,KAAK,GAAGb,MAAM,CAAC,EAAD,CAApB;AACA,QAAM;AAACc,IAAAA;AAAD,MAAWb,UAAU,CAACI,WAAD,CAA3B;;AAEA,QAAMU,cAAc,GAAG,MAAOC,KAAP,IAAiB;AACpCH,IAAAA,KAAK,CAACI,OAAN,GAAiBD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAqBC,WAArB,GAAmCC,KAAnC,CAAyC,GAAzC,EAA8CC,IAA9C,EAAhB;;AACA,QAAI;AACA,UAAGN,KAAK,CAACO,GAAN,KAAc,OAAjB,EAA0B;AACtB,cAAMC,YAAY,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAU,mDAClCX,MADkC,GAC1B,GAD0B,GACpBD,KAAK,CAACI,OADI,CAA3B;AAEA,cAAMS,IAAI,GAAGF,YAAY,CAACG,IAAb,CAAkBD,IAA/B;AACAhB,QAAAA,eAAe,CAACgB,IAAD,CAAf;AACAd,QAAAA,WAAW,CAAC,IAAD,CAAX;AACH;AACJ,KARD,CAQE,OAAMgB,GAAN,EAAW;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACH;AACJ,GAbD;;AAeF,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAc,IAAA,UAAU,EAAEhB,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAESJ,QAAQ,iBACT,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AACVqB,MAAAA,QAAQ,EAAE,MAAMlB,MAAN,GAAe,WAAf,GAA6BD,KAAK,CAACI,OADnC;AAEVgB,MAAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAEzB;AAAX;AAFG,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,CADF,CADJ;AAaD,CApCc,CAAf;AAuCA,eAAeL,UAAU,CAACG,MAAD,CAAzB","sourcesContent":["import React, { useState, useRef, useContext } from 'react';\nimport axios from 'axios';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { AuthContext } from '../../context/AuthContext';\nimport SearchInput from '../searchInput/SearchInput';\n\nconst Search = React.memo(() => {\n\n    const [searchResult, setSearchResult] = useState([]);\n    const [redirect, setRedirect] = useState(false);\n\n    const title = useRef('');\n    const {userId} = useContext(AuthContext);\n\n    const handleKeyPress = async (event) => {\n        title.current = (event.target.value).toLowerCase().split(\"+\").join();\n        try {\n            if(event.key === \"Enter\") {\n                const responseData = await axios.get('http://localhost:8000/api/bookBlog/book/title/'\n                 + userId +'/' + title.current);\n                const book = responseData.data.book;\n                setSearchResult(book);\n                setRedirect(true);\n            }\n        } catch(err) {\n            console.log(err.message)     \n        }\n    }\n    \n  return (\n      <React.Fragment>\n        <div>\n            <SearchInput  onKeyPress={handleKeyPress} />\n                {redirect &&\n                <Redirect to={{\n                    pathname: '/' + userId + '/results/' + title.current,\n                    state: { results: searchResult }\n                }} /> }  \n        </div>\n    </React.Fragment>\n\n  );\n});\n\n\nexport default withRouter(Search);"]},"metadata":{},"sourceType":"module"}