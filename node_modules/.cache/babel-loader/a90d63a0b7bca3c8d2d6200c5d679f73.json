{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/book_app/src/Admin/AdminTable/AdminTable.js\";\nimport React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button, TableFooter, TablePagination } from '@material-ui/core';\nimport MyTablePaginationActions from '../Pagination/MyTablePaginationActions';\nexport default function AdminTable({\n  handleclickOpen,\n  loadedBooks,\n  handleChangePage,\n  handleChangeRowsPerPage,\n  page,\n  rowsPerPage\n}) {\n  const columns = [{\n    id: 'title',\n    label: 'title',\n    align: 'right',\n    format: value => value.toLocaleString('en-US')\n  }, {\n    id: 'author',\n    label: 'Author',\n    align: 'right',\n    format: value => value.toLocaleString('en-US')\n  }, {\n    id: 'imageUrl',\n    label: 'imageUrl',\n    align: 'right',\n    format: value => value.toFixed(2)\n  }, {\n    id: 'description',\n    label: 'Description',\n    align: 'right',\n    format: value => value.toFixed(2)\n  }, {\n    id: 'year',\n    label: 'Year',\n    align: 'right',\n    format: value => value.toFixed(2)\n  }, {\n    id: 'pages',\n    label: 'Pages',\n    align: 'right',\n    format: value => value.toFixed(2)\n  }, {\n    id: 'actions',\n    label: 'Actions',\n    align: 'right',\n    format: value => value.toFixed(2)\n  }];\n\n  function createData(bookId, title, author, imageUrl, description, year, pages) {\n    return {\n      bookId,\n      title,\n      author,\n      imageUrl,\n      description,\n      year,\n      pages\n    };\n  }\n\n  const rows = loadedBooks.map(book => {\n    return createData(book.bookId, book.title, book.author, book.imageUrl, book.description, book.year, book.pages);\n  });\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, loadedBooks.length - page * rowsPerPage);\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Books\"), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, column.label)))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, loadedBooks && rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, columns.map(column => {\n      const value = row[column.id];\n      return /*#__PURE__*/React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 23\n        }\n      }, column.format && typeof value === 'number' ? column.format(value) : value);\n    }));\n  })), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [3, 6, 25],\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'rows per page'\n      },\n      native: true\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/martinraba/Desktop/book_app/src/Admin/AdminTable/AdminTable.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","TableFooter","TablePagination","MyTablePaginationActions","AdminTable","handleclickOpen","loadedBooks","handleChangePage","handleChangeRowsPerPage","page","rowsPerPage","columns","id","label","align","format","value","toLocaleString","toFixed","createData","bookId","title","author","imageUrl","description","year","pages","rows","map","book","emptyRows","Math","min","length","column","minWidth","slice","row","code","inputProps","native"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button, TableFooter, TablePagination } from '@material-ui/core';\nimport MyTablePaginationActions from '../Pagination/MyTablePaginationActions';\n\n\nexport default function AdminTable({\n    handleclickOpen,\n    loadedBooks,\n    handleChangePage,\n    handleChangeRowsPerPage,\n    page, \n    rowsPerPage\n  }) {\n\n    const columns = [\n      {\n        id: 'title',\n        label: 'title',\n        align: 'right',\n        format: (value) => value.toLocaleString('en-US'),\n      },\n      {\n        id: 'author',\n        label: 'Author',\n        align: 'right',\n        format: (value) => value.toLocaleString('en-US'),\n      },\n      {\n        id: 'imageUrl',\n        label: 'imageUrl',\n        align: 'right',\n        format: (value) => value.toFixed(2),\n      },\n      {\n        id: 'description',\n        label: 'Description',\n        align: 'right',\n        format: (value) => value.toFixed(2),\n      },\n      {\n        id: 'year',\n        label: 'Year',\n        align: 'right',\n        format: (value) => value.toFixed(2),\n      },\n      {\n        id: 'pages',\n        label: 'Pages',\n        align: 'right',\n        format: (value) => value.toFixed(2),\n      },\n      {\n        id: 'actions',\n        label: 'Actions',\n        align: 'right',\n        format: (value) => value.toFixed(2),\n      },\n    ];\n\nfunction createData(bookId, title, author, imageUrl, description, year, pages) {\n    return {bookId, title, author, imageUrl, description, year, pages  };\n}\n\n\nconst rows =  loadedBooks.map(book => {\n  return createData(\n      book.bookId,\n      book.title,\n      book.author,\n      book.imageUrl,\n      book.description,\n      book.year,\n      book.pages)\n})\n      \nconst emptyRows = rowsPerPage - Math.min(rowsPerPage, loadedBooks.length - page * rowsPerPage);\n\n  \n\n    return(\n        <TableContainer component={Paper}>\n            <h2>Books</h2>\n          <Table>\n            <TableHead>\n              <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n            {loadedBooks && rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n            </TableBody>\n            <TableFooter>\n                <TablePagination\n                rowsPerPageOptions={[3, 6, 25]}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                 />\n            </TableFooter>\n          </Table>\n        </TableContainer>\n    )\n}"]},"metadata":{},"sourceType":"module"}