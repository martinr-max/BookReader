{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/book_app/src/Admin/AdminTable/AdminTable.js\";\nimport React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button, TablePagination } from '@material-ui/core';\nexport default function AdminTable({\n  handleclickOpen,\n  loadedBooks,\n  handleChangePage,\n  handleChangeRowsPerPage,\n  page,\n  rowsPerPage\n}) {\n  const headCells = [{\n    id: 'title',\n    label: 'Title'\n  }, {\n    id: 'author',\n    label: 'Author'\n  }, {\n    id: 'imageUrl',\n    label: 'ImageUrl'\n  }, {\n    id: 'description',\n    label: 'Description'\n  }, {\n    id: 'year',\n    numeric: true,\n    label: 'Year'\n  }, {\n    id: 'pages',\n    numeric: true,\n    label: 'Pages'\n  }, {\n    id: 'actions',\n    label: 'Actions'\n  }];\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Books\"), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, headCells.map(cell => {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      key: cell.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 26\n      }\n    }, \" \", cell.label, \" \");\n  }))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, loadedBooks && (rowsPerPage > 0 ? loadedBooks.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : loadedBooks).map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    name: \"title\",\n    component: \"th\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, row.title), /*#__PURE__*/React.createElement(TableCell, {\n    name: \"author\",\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 59\n    }\n  }, \" \", row.author, \" \")), /*#__PURE__*/React.createElement(TableCell, {\n    name: \"imageUrl\",\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }, row.imageUrl), /*#__PURE__*/React.createElement(TableCell, {\n    name: \"description\",\n    align: \"right\",\n    className: \"text2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }, row.description), /*#__PURE__*/React.createElement(TableCell, {\n    name: \"year\",\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, row.year), /*#__PURE__*/React.createElement(TableCell, {\n    name: \"pages\",\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, row.pages), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    href: \"/admin/edit/\" + row.bookId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"EDIT\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: e => handleclickOpen(row.bookId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"DELETE\"))))), /*#__PURE__*/React.createElement(TableRow, {\n    className: \"pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [3, 6, {\n      label: 'All',\n      value: -1\n    }],\n    count: loadedBooks.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'rows per page'\n      },\n      native: true\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/martinraba/Desktop/book_app/src/Admin/AdminTable/AdminTable.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","TablePagination","AdminTable","handleclickOpen","loadedBooks","handleChangePage","handleChangeRowsPerPage","page","rowsPerPage","headCells","id","label","numeric","map","cell","slice","row","title","author","imageUrl","description","year","pages","bookId","e","value","length","inputProps","native"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button, TablePagination } from '@material-ui/core';\n\n\nexport default function AdminTable({\n    handleclickOpen,\n    loadedBooks,\n    handleChangePage,\n    handleChangeRowsPerPage,\n    page, \n    rowsPerPage\n  }) {\n\n    const headCells = [\n      { id: 'title', label: 'Title' },\n      { id: 'author', label: 'Author' },\n      { id: 'imageUrl',  label: 'ImageUrl' },\n      { id: 'description', label: 'Description' },\n      { id: 'year', numeric: true,  label: 'Year'},\n      { id: 'pages', numeric: true,  label: 'Pages'},\n      { id: 'actions',  label: 'Actions'},\n    ];\n\n\n  return(\n       \n        <TableContainer component={Paper}>\n            <h2>Books</h2>\n            \n          <Table>\n            <TableHead>\n              <TableRow>\n                {headCells.map((cell) => {\n                  return <TableCell key={cell.id}> {cell.label} </TableCell>\n                })}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              { loadedBooks &&\n              (rowsPerPage > 0\n                ? loadedBooks.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                : loadedBooks\n              ).map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell  name=\"title\" component=\"th\" >{row.title}</TableCell>\n                  <TableCell  name=\"author\" align=\"right\"><div> {row.author} </div></TableCell>\n                  <TableCell  name=\"imageUrl\" align=\"right\">{row.imageUrl}</TableCell>\n                  <TableCell  name=\"description\" align=\"right\" className=\"text2\">{row.description}</TableCell>\n                  <TableCell  name=\"year\" align=\"right\">{row.year}</TableCell>\n                  <TableCell  name=\"pages\" align=\"right\">{row.pages}</TableCell>\n                  <TableCell align=\"right\">\n                    <Button href={\"/admin/edit/\" + row.bookId} >EDIT</Button>\n                    <Button color=\"secondary\"  onClick={(e) => handleclickOpen(row.bookId)} >DELETE</Button>\n                  </TableCell>\n                </TableRow>\n              )) }\n            </TableBody>\n            <TableRow className=\"pagination\">\n                <TablePagination\n                rowsPerPageOptions={[3, 6, { label: 'All', value: -1 }]}\n                count={loadedBooks.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}/>\n            </TableRow>\n          </Table>\n        </TableContainer>\n    );\n}"]},"metadata":{},"sourceType":"module"}