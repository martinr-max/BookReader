{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/book_app/src/Books/userBooksList/UserBookList.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport './UserBookList.css';\nimport UserBooklistItem from '../userBooklistItem/UserBooklistItem';\nimport CircularIndeterminate from '../../shared/progressCircle/ProgressCircle';\nimport Alert from '@material-ui/lab/Alert';\nexport default function UserBookList(props) {\n  const [loadedBook, setLoadedBook] = useState([]);\n  const [bookIndex, setBookIndex] = useState();\n  const [open, setOpen] = useState(false);\n  const [isLoading, setIsloading] = useState(false);\n  const [error, setError] = useState(\"\");\n  console.log(props.location.state);\n  const userId = useParams().userId;\n\n  const handleclickOpen = index => {\n    let bookId = index;\n    setBookIndex(bookId);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    setIsloading(true);\n\n    const getUseBooks = async () => {\n      try {\n        const responseData = await axios.get('http://localhost:8000/api/bookBlog/booklist/' + userId);\n        let userBooks = responseData.data;\n        setLoadedBook(userBooks);\n        setIsloading(false);\n      } catch (err) {//setError(err.response.data.message)\n      }\n    };\n\n    getUseBooks();\n\n    /*#__PURE__*/\n    React.createElement(Alert, {\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, props.location.state.message);\n  }, [userId]);\n\n  const handleDeleteUserBook = id => {\n    id = bookIndex;\n    setOpen(false);\n    fetch('http://localhost:8000/api/bookBlog/booklist/delete/' + userId, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: id\n      })\n    }).then(response => {\n      return response.json();\n    }).then(deletedBook => {\n      let deletedBookId = deletedBook.id;\n      var userData = JSON.parse(localStorage.getItem('userData'));\n      let newBookList = userData.userBookList;\n\n      for (var i = 0; i < newBookList.length; i++) {\n        if (newBookList[i] === deletedBookId) {\n          newBookList.splice(i, 1);\n        }\n      }\n\n      let newArray = loadedBook.filter(book => book.id !== deletedBookId);\n      setLoadedBook(newArray);\n      localStorage.setItem('userData', JSON.stringify(userData));\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, error && /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \" \", error, \" \"), isLoading && !error && /*#__PURE__*/React.createElement(CircularIndeterminate, {\n    color: \"primary\",\n    size: \"7rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Your Booklist\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"userBookList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, loadedBook.length !== 0 ? loadedBook && loadedBook.map(book => {\n    return /*#__PURE__*/React.createElement(UserBooklistItem, {\n      key: book.id,\n      id: book.id,\n      title: book.title,\n      author: book.author,\n      imageUrl: book.imageUrl,\n      open: open,\n      handleclickOpen: handleclickOpen,\n      handleClose: handleClose,\n      bookIndex: bookIndex,\n      handleDeleteUserBook: handleDeleteUserBook,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 24\n      }\n    });\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"listIsEmpty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }\n  }, \" Your list is empty. Maybe add some book?\"))));\n}","map":{"version":3,"sources":["/Users/martinraba/Desktop/book_app/src/Books/userBooksList/UserBookList.js"],"names":["React","useState","useEffect","axios","Container","useParams","UserBooklistItem","CircularIndeterminate","Alert","UserBookList","props","loadedBook","setLoadedBook","bookIndex","setBookIndex","open","setOpen","isLoading","setIsloading","error","setError","console","log","location","state","userId","handleclickOpen","index","bookId","handleClose","getUseBooks","responseData","get","userBooks","data","err","message","handleDeleteUserBook","id","fetch","method","headers","body","JSON","stringify","then","response","json","deletedBook","deletedBookId","userData","parse","localStorage","getItem","newBookList","userBookList","i","length","splice","newArray","filter","book","setItem","catch","map","title","author","imageUrl"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport './UserBookList.css';\nimport UserBooklistItem from '../userBooklistItem/UserBooklistItem';\nimport CircularIndeterminate from '../../shared/progressCircle/ProgressCircle';\nimport Alert from '@material-ui/lab/Alert';\n\n\nexport default function UserBookList(props) {\n\n    const [loadedBook, setLoadedBook] = useState([]);\n    const [bookIndex, setBookIndex] = useState();\n    const [open, setOpen] = useState(false);\n    const [isLoading, setIsloading] = useState(false);\n    const [error, setError] = useState(\"\");\n    console.log(props.location.state )\n\n    const userId = useParams().userId;\n\n\n    const handleclickOpen = (index) => {\n        let bookId = index;\n         setBookIndex(bookId);\n         setOpen(true);\n       };\n   \n       const handleClose = () => {\n         setOpen(false);\n       }\n\n    useEffect( () => {\n        setIsloading(true);\n        const getUseBooks = async () => {\n                try {\n                    const responseData = await axios.get('http://localhost:8000/api/bookBlog/booklist/' + userId )\n                    let userBooks = responseData.data;\n                    setLoadedBook(userBooks);\n                    setIsloading(false);\n                    \n                }\n                catch(err) {\n                    //setError(err.response.data.message)\n\n                }\n        }\n        getUseBooks();  \n        <Alert severity=\"error\">{props.location.state.message}</Alert>\n            \n    }, [userId]);\n\n    const handleDeleteUserBook = (id) =>{ \n        id = bookIndex;\n        setOpen(false)\n         fetch('http://localhost:8000/api/bookBlog/booklist/delete/' + userId,\n         {\n             method: \"DELETE\",\n            headers:{'Content-Type': 'application/json'} ,\n            body: JSON.stringify({id: id})\n         })\n        .then( response => {\n           return response.json()\n            \n        })\n        .then((deletedBook) => {\n            let deletedBookId = deletedBook.id;\n            var userData = JSON.parse(localStorage.getItem('userData'));\n            let newBookList = userData.userBookList;\n            for( var i = 0; i < newBookList.length; i++){ \n                if ( newBookList[i] === deletedBookId)\n                 { newBookList.splice(i, 1); }\n                }\n            let newArray = loadedBook.filter(book => book.id !== deletedBookId);\n            setLoadedBook(newArray)\n            localStorage.setItem('userData', JSON.stringify(userData))\n        })\n        .catch(err => console.log(err))       \n    }\n    \n    return(\n        <React.Fragment>\n        { error &&  <Alert severity=\"error\"> { error } </Alert> }\n        {isLoading && !error && <CircularIndeterminate color=\"primary\" size=\"7rem\" />}\n        <Container className=\"container\">\n        <h3>Your Booklist</h3>\n        \n        <ul className=\"userBookList\">\n        { loadedBook.length !== 0 ?    \n              loadedBook && loadedBook.map(book => {\n                return <UserBooklistItem\n                    key = {book.id}\n                    id = {book.id}\n                    title={book.title}\n                    author={book.author}\n                    imageUrl= {book.imageUrl}\n                    open={open}\n                    handleclickOpen={handleclickOpen}\n                    handleClose={handleClose}\n                    bookIndex={bookIndex}\n                    handleDeleteUserBook= {handleDeleteUserBook}\n             />})\n        :  <p className=\"listIsEmpty\"> Your list is empty. Maybe add some book?</p>}\n        </ul>\n        </Container>\n        </React.Fragment>\n    )\n}"]},"metadata":{},"sourceType":"module"}