{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/book_app/src/Admin/AdminTable/AdminTable.js\";\nimport React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button, TableFooter, TablePagination } from '@material-ui/core';\nimport MyTablePaginationActions from '../Pagination/MyTablePaginationActions';\nexport default function AdminTable({\n  handleclickOpen,\n  loadedBooks,\n  handleChangePage,\n  handleChangeRowsPerPage,\n  page,\n  rowsPerPage\n}) {\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, loadedBooks.length - page * rowsPerPage);\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"Books\"), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"Title \"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"Author \"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \" ImageURL \"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \" Description\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \" Year\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \" Pages\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    className: \"actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, loadedBooks && (rowsPerPage > 0 ? loadedBooks.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : loadedBooks).map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    name: \"title\",\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  }, row.title), /*#__PURE__*/React.createElement(TableCell, {\n    name: \"author\",\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 59\n    }\n  }, \" \", row.author, \" \")), /*#__PURE__*/React.createElement(TableCell, {\n    name: \"imageUrl\",\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }, row.imageUrl), /*#__PURE__*/React.createElement(TableCell, {\n    name: \"description\",\n    align: \"right\",\n    className: \"text2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }, row.description), /*#__PURE__*/React.createElement(TableCell, {\n    name: \"year\",\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, row.year), /*#__PURE__*/React.createElement(TableCell, {\n    name: \"pages\",\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }, row.pages), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    href: \"/admin/edit/\" + row.bookId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"EDIT\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: e => handleclickOpen(row.bookId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"DELETE\")))), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: 53 * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, {\n      label: 'All',\n      value: -1\n    }],\n    colSpan: 3,\n    count: loadedBooks.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'rows per page'\n      },\n      native: true\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    ActionsComponent: MyTablePaginationActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MyTablePaginationActions, {\n    page: page,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 18\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/martinraba/Desktop/book_app/src/Admin/AdminTable/AdminTable.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","TableFooter","TablePagination","MyTablePaginationActions","AdminTable","handleclickOpen","loadedBooks","handleChangePage","handleChangeRowsPerPage","page","rowsPerPage","emptyRows","Math","min","length","slice","map","row","id","title","author","imageUrl","description","year","pages","bookId","e","height","label","value","inputProps","native"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button, TableFooter, TablePagination } from '@material-ui/core';\nimport MyTablePaginationActions from '../Pagination/MyTablePaginationActions';\n\n\nexport default function AdminTable({\n    handleclickOpen,\n    loadedBooks,\n    handleChangePage,\n    handleChangeRowsPerPage,\n    page, \n    rowsPerPage\n  }) {\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, loadedBooks.length - page * rowsPerPage);\n\n  \n\n    return(\n        <TableContainer component={Paper}>\n            <h2>Books</h2>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"left\">Title </TableCell>\n                <TableCell align=\"left\">Author </TableCell>\n                <TableCell align=\"left\"> ImageURL </TableCell>\n                <TableCell align=\"left\"> Description</TableCell>\n                <TableCell align=\"left\"> Year</TableCell>\n                <TableCell align=\"left\"> Pages</TableCell>\n                <TableCell align=\"left\"className=\"actions\">Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              { loadedBooks &&\n              (rowsPerPage > 0\n                ? loadedBooks.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                : loadedBooks\n              ).map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell  name=\"title\" component=\"th\" scope=\"row\">{row.title}</TableCell>\n                  <TableCell  name=\"author\" align=\"right\"><div> {row.author} </div></TableCell>\n                  <TableCell  name=\"imageUrl\" align=\"right\">{row.imageUrl}</TableCell>\n                  <TableCell  name=\"description\" align=\"right\" className=\"text2\">{row.description}</TableCell>\n                  <TableCell  name=\"year\" align=\"right\">{row.year}</TableCell>\n                  <TableCell  name=\"pages\" align=\"right\">{row.pages}</TableCell>\n                  <TableCell align=\"right\">\n                    <Button href={\"/admin/edit/\" + row.bookId} >EDIT</Button>\n                    <Button color=\"secondary\"  onClick={(e) => handleclickOpen(row.bookId)} >DELETE</Button>\n                  </TableCell>\n                </TableRow>\n              )) }\n                {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                colSpan={3}\n                count={loadedBooks.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={MyTablePaginationActions}\n                 />\n                 <MyTablePaginationActions page={page} />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </TableContainer>\n    )\n}"]},"metadata":{},"sourceType":"module"}