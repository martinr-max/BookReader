{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/book_app/src/navigation/searchEngine/SearchEngine.js\";\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport axios from 'axios';\nimport SearchResultsPage from '../searchResultsPage/SearchResultsPage';\nconst Search = React.memo(props => {\n  const [searchText, setSearchText] = React.useState('');\n  const [searchResult, setSearchResult] = React.useState('');\n  const [loadedBooks, setLoadedBooks] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/bookBlog/books/').then(response => {\n      const books = response.data.books;\n      setLoadedBooks(books);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const handleText = event => {\n    setSearchText(event.target.value);\n  };\n\n  React.useEffect(() => {\n    const results = loadedBooks.filter(book => book.toLowerCase().includes(searchText));\n    setSearchResult(results);\n  }, [search]);\n  console.log(searchResult);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"search\",\n    value: text,\n    onChange: handleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  })));\n});\nexport default Search;","map":{"version":3,"sources":["/Users/martinraba/Desktop/book_app/src/navigation/searchEngine/SearchEngine.js"],"names":["React","useState","useEffect","useRef","useMemo","axios","SearchResultsPage","Search","memo","props","searchText","setSearchText","searchResult","setSearchResult","loadedBooks","setLoadedBooks","get","then","response","books","data","catch","err","console","log","handleText","event","target","value","results","filter","book","toLowerCase","includes","search","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,OAA7C,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AAEA,MAAMC,MAAM,GAAGP,KAAK,CAACQ,IAAN,CAAWC,KAAK,IAAI;AAE/B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,KAAK,CAACC,QAAN,CAAe,EAAf,CAApC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCb,KAAK,CAACC,QAAN,CAAe,EAAf,CAAxC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AAGAC,EAAAA,SAAS,CAAE,MAAM;AAEVG,IAAAA,KAAK,CAACW,GAAN,CAAU,2CAAV,EACCC,IADD,CACOC,QAAQ,IAAI;AACf,YAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAT,CAAcD,KAA5B;AACAJ,MAAAA,cAAc,CAACI,KAAD,CAAd;AACH,KAJD,EAKCE,KALD,CAKOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALd;AAMN,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMG,UAAU,GAAIC,KAAD,IAAW;AAC1Bf,IAAAA,aAAa,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD,GAFH;;AAKE5B,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpB,UAAM2B,OAAO,GAAGf,WAAW,CAACgB,MAAZ,CAAmBC,IAAI,IACrCA,IAAI,CAACC,WAAL,GAAmBC,QAAnB,CAA4BvB,UAA5B,CADc,CAAhB;AAGAG,IAAAA,eAAe,CAACgB,OAAD,CAAf;AACD,GALD,EAKG,CAACK,MAAD,CALH;AASNX,EAAAA,OAAO,CAACC,GAAR,CAAYZ,YAAZ;AAGE,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACR;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,QAA/B;AAAwC,IAAA,KAAK,EAAEuB,IAA/C;AAAqD,IAAA,QAAQ,EAAEV,UAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,CADR,CADJ;AAYD,CA9Cc,CAAf;AAiDA,eAAelB,MAAf","sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport axios from 'axios';\nimport SearchResultsPage from '../searchResultsPage/SearchResultsPage';\n\nconst Search = React.memo(props => {\n\n    const [searchText, setSearchText] = React.useState('');\n    const [searchResult, setSearchResult] = React.useState('');\n    const [loadedBooks, setLoadedBooks] = useState([]);\n\n\n    useEffect( () => {\n        \n           axios.get('http://localhost:8000/api/bookBlog/books/')\n           .then( response => {\n               const books = response.data.books;\n               setLoadedBooks(books)\n           })\n           .catch(err => console.log(err))       \n    }, []);\n\n    const handleText = (event) => {\n        setSearchText(event.target.value);\n      };\n     \n\n      React.useEffect(() => {\n        const results = loadedBooks.filter(book =>\n          book.toLowerCase().includes(searchText)\n        );\n        setSearchResult(results);\n      }, [search]);\n    \n     \n       \nconsole.log(searchResult)\n    \n\n  return (\n      <React.Fragment>\n              <div>\n      <input type=\"text\" placeholder=\"search\" value={text} onChange={handleText} />\n        \n \n    </div>\n    \n                \n                </React.Fragment>\n\n  );\n});\n\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}