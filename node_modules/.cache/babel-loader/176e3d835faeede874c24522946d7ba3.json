{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/book_app/src/Admin/EditBook.js\";\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport Axios from 'axios';\nexport default function EditBook() {\n  const [loadedBook, setLoadedBook] = useState([]);\n  const bookId = useParams().bookId;\n  useEffect(() => {\n    Axios.get(`http://localhost:8000/api/bookBlog/book/${bookId}`).then(response => {\n      const book = response.data.book;\n      setLoadedBook(book);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const handleChange = event => {\n    event.persist();\n    setLoadedBook(loadedBook => ({ ...loadedBook,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const submitEditedBook = event => {\n    event.preventDefault();\n    const updatedBook = {\n      title: loadedBook.title,\n      author: loadedBook.author,\n      imageUrl: loadedBook.imageUrl,\n      year: loadedBook.year,\n      pages: loadedBook.pages,\n      description: loadedBook.description\n    };\n    setLoadedBook(updatedBook);\n    Axios.patch(`http://localhost:8000/api/admin/books/edit/${bookId}`, updatedBook).then(response => {\n      console.log(response);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"bookForm\",\n    onSubmit: submitEditedBook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Edit Book\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"input\",\n    type: \"text\",\n    name: \"title\",\n    onChange: handleChange,\n    value: loadedBook.title,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"input\",\n    type: \"text\",\n    name: \"author\",\n    onChange: handleChange,\n    value: loadedBook.author,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"input\",\n    type: \"text\",\n    name: \"imageUrl\",\n    onChange: handleChange,\n    value: loadedBook.imageUrl,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"input\",\n    type: \"number\",\n    name: \"year\",\n    onChange: handleChange,\n    value: loadedBook.year,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"input\",\n    type: \"number\",\n    name: \"pages\",\n    value: loadedBook.pages,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"textarea\",\n    type: \"text\",\n    name: \"description\",\n    onChange: handleChange,\n    value: loadedBook.description,\n    multiline: true,\n    rows: 3,\n    rowsMax: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"editBookButton\",\n    color: \"primary\",\n    size: \"large\",\n    variant: \"contained\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"EDIT BOOK\"));\n}","map":{"version":3,"sources":["/Users/martinraba/Desktop/book_app/src/Admin/EditBook.js"],"names":["React","useState","useEffect","TextField","Button","useParams","Axios","EditBook","loadedBook","setLoadedBook","bookId","get","then","response","book","data","catch","err","console","log","handleChange","event","persist","target","name","value","submitEditedBook","preventDefault","updatedBook","title","author","imageUrl","year","pages","description","patch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport Axios from 'axios';\n\n\nexport default function EditBook() {\n\n    const [loadedBook, setLoadedBook] = useState([]);\n    const bookId = useParams().bookId;\n\n    useEffect(() => {\n                \n        Axios.get(`http://localhost:8000/api/bookBlog/book/${bookId}`)\n        .then(response => {\n          const book = response.data.book;\n    \n      setLoadedBook(book)   \n    })\n    .catch(err => console.log(err))\n    }, [])\n\n    const handleChange = (event) => {\n        event.persist();\n        setLoadedBook(loadedBook => ({\n          ...loadedBook,\n          [event.target.name]: event.target.value\n      }));\n     }\n\n    const submitEditedBook = (event) => {\n        event.preventDefault();\n        const updatedBook = {\n            title: loadedBook.title,\n            author: loadedBook.author,\n            imageUrl: loadedBook.imageUrl,\n            year: loadedBook.year,\n            pages: loadedBook.pages,\n            description: loadedBook.description\n          } \n          setLoadedBook(updatedBook);\n        Axios.patch(`http://localhost:8000/api/admin/books/edit/${bookId}`, updatedBook)\n        .then(response => {\n            console.log(response)\n        })\n        .catch(err => console.log(err))\n    }\n\n    return(\n        <form  className=\"bookForm\" onSubmit={submitEditedBook} >\n        <h2>Edit Book</h2>\n\n        <TextField \n        id=\"input\"\n        type=\"text\"\n        name=\"title\"\n        onChange={handleChange}\n        value={loadedBook.title}\n        required\n        />\n        <TextField\n        id=\"input\"\n        type=\"text\"\n        name=\"author\"\n        onChange={handleChange}\n        value={loadedBook.author}\n        required\n         />\n        <TextField\n        id=\"input\"\n        type=\"text\"\n        name=\"imageUrl\"\n        onChange={handleChange}\n        value={loadedBook.imageUrl}\n        required\n         />\n        <TextField\n        id=\"input\"\n        type=\"number\"\n        name=\"year\"\n        onChange={handleChange}\n        value={loadedBook.year}\n        required\n        />\n        <TextField\n        id=\"input\"\n        type=\"number\"\n        name=\"pages\"\n        value={loadedBook.pages}\n        onChange={handleChange}\n        required\n         />\n        <TextField\n        id=\"textarea\"\n        type=\"text\"\n        name=\"description\"\n        onChange={handleChange}\n        value={loadedBook.description}\n        multiline\n        rows={3}\n        rowsMax={3}\n        />\n\n      <Button\n        className=\"editBookButton\"\n        color=\"primary\"\n        size=\"large\"\n        variant=\"contained\"\n        type=\"submit\" >\n             EDIT BOOK\n        </Button> \n       \n    </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}